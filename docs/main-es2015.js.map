{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/dashboard/chat-message/chat-message.component.ts","./src/app/modules/dashboard/chat-message/chat-message.component.html","./src/app/modules/dashboard/dashboard.component.ts","./src/app/modules/dashboard/dashboard.component.html","./src/app/modules/dashboard/dashboard.module.ts","./src/app/modules/dashboard/friend-chat/friend-chat.component.ts","./src/app/modules/dashboard/friend-chat/friend-chat.component.html","./src/app/modules/dashboard/new-friend-request/new-friend-request.component.ts","./src/app/modules/dashboard/new-friend-request/new-friend-request.component.html","./src/app/modules/dashboard/received-friend-request/received-friend-request.component.ts","./src/app/modules/dashboard/received-friend-request/received-friend-request.component.html","./src/app/modules/dashboard/settings/account/account.component.ts","./src/app/modules/dashboard/settings/account/account.component.html","./src/app/modules/dashboard/settings/change-password/change-password.component.ts","./src/app/modules/dashboard/settings/change-password/change-password.component.html","./src/app/modules/dashboard/settings/settings.component.ts","./src/app/modules/dashboard/settings/settings.component.html","./src/app/modules/home/home.component.ts","./src/app/modules/home/home.component.html","./src/app/modules/home/home.module.ts","./src/app/shared/components/not-found/not-found.component.ts","./src/app/shared/components/not-found/not-found.component.html","./src/app/shared/components/sign-in/sign-in.component.ts","./src/app/shared/components/sign-in/sign-in.component.html","./src/app/shared/components/sign-up/sign-up.component.ts","./src/app/shared/components/sign-up/sign-up.component.html","./src/app/shared/enum/chat-messages-status.ts","./src/app/shared/helpers/auth.guard.ts","./src/app/shared/helpers/token.interceptor.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/chat-message.service.ts","./src/app/shared/services/chat-profile.service.ts","./src/app/shared/services/friend-chat.service.ts","./src/app/shared/services/friend-request.service.ts","./src/app/shared/services/user.service.ts","./src/app/shared/services/ws-messages.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {HomeComponent} from './modules/home/home.component';\nimport {NotFoundComponent} from './shared/components/not-found/not-found.component';\nimport {SignUpComponent} from './shared/components/sign-up/sign-up.component';\nimport {DashboardComponent} from './modules/dashboard/dashboard.component';\nimport {AuthGuard} from './shared/helpers/auth.guard';\nimport {SignInComponent} from './shared/components/sign-in/sign-in.component';\n\nconst routes: Routes = [\n\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'login',\n    component: SignInComponent\n  },\n  {\n    path: 'register',\n    component: SignUpComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    component: HomeComponent\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {SharedModule} from './shared/shared.module';\nimport {HomeModule} from './modules/home/home.module';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DashboardModule} from './modules/dashboard/dashboard.module';\nimport {TokenInterceptor} from './shared/helpers/token.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    HomeModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DashboardModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ChatMessage} from '../../../shared/models/chat-message';\nimport {AuthService} from '../../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-chat-message',\n  templateUrl: './chat-message.component.html',\n  styleUrls: ['./chat-message.component.css']\n})\nexport class ChatMessageComponent implements OnInit, AfterViewInit {\n\n  currentUserId: string;\n\n  @Input('message')\n  message: ChatMessage = null;\n\n  @Output()\n  afterRenderMessage: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private authService: AuthService) {\n    this.currentUserId = authService.currentUserValue.id;\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.afterRenderMessage.emit();\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-12\" *ngIf=\"message.sender !== currentUserId\">\n    <div class=\"row\">\n      <div class=\"col-sm-8 incoming-message-container\">\n        <div class=\"row\">\n          <div class=\"col-2 incoming-message-avatar\">\n            <img src=\"/assets/img/user_avatar.svg\" alt=\"\">\n          </div>\n          <div class=\"col-10 incoming-message-content\">\n            <div class=\"incoming-message-text\">\n              <p class=\"shadow p-3 mb-5 rounded\" style=\"overflow-wrap: break-word;\">\n                {{message.content}}\n              </p>\n            </div>\n            <div class=\" incoming-message-date\">\n              <span>{{message.time | date: 'medium' }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-4\"></div>\n    </div>\n  </div>\n  <div class=\"col-sm-12\" *ngIf=\"message.sender === currentUserId\">\n    <div class=\"row\">\n      <div class=\"col-sm-4\"></div>\n      <div class=\"col-sm-8 outgoing-message-container\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"outgoing-message-text\">\n              <p class=\"shadow p-3 mb-5 rounded\" style=\"overflow-wrap: break-word;\">\n                {{message.content}}\n              </p>\n            </div>\n            <div class=\" outgoing-message-date\">\n              <span>{{message.time | date: 'medium'}}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {AuthService} from '../../shared/services/auth.service';\nimport {Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport {ChatMessageService} from '../../shared/services/chat-message.service';\nimport {ChatMessage} from '../../shared/models/chat-message';\nimport {WsMessagesService} from '../../shared/services/ws-messages.service';\nimport {AfterWebSocketConnected} from '../../shared/helpers/after-web-socket-connected';\nimport {UserService} from '../../shared/services/user.service';\nimport {User} from '../../shared/models/user';\nimport {FriendRequestService} from '../../shared/services/friend-request.service';\nimport {FriendRequest} from '../../shared/models/friend-request';\nimport {Subject} from 'rxjs';\nimport {ChatProfile} from '../../shared/models/chat-profile';\nimport {FriendChatService} from '../../shared/services/friend-chat.service';\nimport {FriendChat} from '../../shared/models/friend-chat';\nimport {ChatProfileService} from '../../shared/services/chat-profile.service';\nimport {ChatMessagesStatus} from '../../shared/enum/chat-messages-status';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, AfterWebSocketConnected {\n\n  @ViewChild('inputMessage') inputMessage: ElementRef;\n  @ViewChild('friendCode') friendCode: ElementRef;\n  @ViewChild('notification') notification: ElementRef;\n  @ViewChild('messageContainer') messageContainer: ElementRef;\n  @ViewChild('appMessage') appMessage: ElementRef;\n\n  isNewMessage: Subject<ChatMessage> = new Subject();\n  clickFriendComponent: Subject<number> = new Subject();\n  currentUser = {} as User;\n  currentUserChatProfile = {} as ChatProfile;\n  receivedFriendRequests: FriendRequest[] = [];\n  sentFriendRequests: FriendRequest[] = [];\n  currentRecipientUser = {} as User;\n  notificationMessage = '';\n  isActiveFriendComponent = true;\n  isActiveFriendRequestComponent = false;\n  isActiveAddFriendComponent = false;\n  isActiveSettingsComponent = false;\n  showDeleteFriendPrompt = false;\n  isNotificationVisible = false;\n  friendsChats: FriendChat[] = [];\n  messageList: ChatMessage[] = [];\n  currentFriendChat: FriendChat = null;\n  scrollDivMessagePosition: number = null;\n  private shouldScrollToBottomAfterSendMessage = false;\n  private audio = new Audio();\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private chatMessageService: ChatMessageService,\n              private wsMessagesService: WsMessagesService,\n              private userService: UserService,\n              private friendRequestService: FriendRequestService,\n              private chatProfileService: ChatProfileService,\n              private friendChatService: FriendChatService) {\n    wsMessagesService.connect(authService.getToken(), this);\n    this.initAudioNotification();\n  }\n\n  ngOnInit(): void {\n    this.getUserFriendsChats();\n    this.getUserInformation();\n    this.getUserChatProfile();\n  }\n\n  private getUserFriendsChats() {\n    this.friendChatService.getFriendsChats().pipe(first())\n      .subscribe(result => {\n        this.friendsChats = result;\n      });\n  }\n\n  getPreviousMessages() {\n    this.chatMessageService.getPreviousMessages(10, this.currentFriendChat.id, this.currentFriendChat.chatWith,\n      new Date(this.messageList[0].time).toISOString())\n      .subscribe(result => {\n        result.forEach(message => {\n          //unshift: add to begining\n          this.messageList.unshift(message);\n        });\n      });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/']);\n  }\n\n  enterFriendChat(friendChatId: number) {\n    this.currentFriendChat = this.friendsChats.filter(value => value.id === friendChatId)[0];\n    this.getInitialMessages(this.currentFriendChat.id, this.currentFriendChat.chatWith);\n    this.userService.getUser(this.currentFriendChat.recipient.userId)\n      .subscribe(recipient => {\n        this.currentRecipientUser = recipient;\n      });\n    this.clickFriendComponent.next(friendChatId);\n  }\n\n\n  getInitialMessages(friendChatId: number, friendChatWithId: number) {\n    this.chatMessageService.getLastMessages(10, friendChatId, friendChatWithId).pipe(first())\n      .subscribe(lastChatMessages => {\n        lastChatMessages.sort((m1, m2) => m1.time.localeCompare(m2.time));\n        this.messageList = lastChatMessages;\n      });\n  }\n\n  sentMessage() {\n    let messageContent = this.inputMessage.nativeElement.value;\n    // delete EOL\n    if (messageContent.substr(messageContent.length - 1) === '\\n') {\n      messageContent = messageContent.slice(0, -1);\n    }\n    if (messageContent !== '' || 0 !== messageContent.length) {\n      const message = {\n        friendChat: this.currentFriendChat.id,\n        sender: this.authService.currentUserValue.id,\n        recipient: this.currentFriendChat.recipient.userId,\n        content: messageContent,\n        status: ChatMessagesStatus.received,\n        time: new Date().toISOString()\n      } as ChatMessage;\n      this.messageList.push(message);\n      this.wsMessagesService.sendMessage(message);\n      this.inputMessage.nativeElement.value = '';\n\n      this.isNewMessage.next(message);\n      this.shouldScrollToBottomAfterSendMessage = true;\n    } else {\n      this.inputMessage.nativeElement.value = '';\n    }\n\n  }\n\n  scrollChatMessage() {\n    // scroll to bottom after send chat-message\n    if (this.shouldScrollToBottomAfterSendMessage) {\n      this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight;\n      this.shouldScrollToBottomAfterSendMessage = false;\n      return;\n    }\n\n    if (this.scrollDivMessagePosition !== null && this.scrollDivMessagePosition < this.messageContainer.nativeElement.scrollHeight) {\n      this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight - this.scrollDivMessagePosition;\n    } else {\n      this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight;\n    }\n  }\n\n  //websock protocol\n  wsAfterConnected() {\n    const that = this;\n    this.wsMessagesService.ws.subscribe('/topic/' + this.authService.currentUserValue.id + '.messages',\n      message => {\n        let chatMessage: ChatMessage;\n        chatMessage = JSON.parse(message.body);\n        if (that.currentFriendChat !== null && chatMessage.friendChat === that.currentFriendChat.chatWith) {\n          that.chatMessageService.markMessageAsDelivered(that.currentFriendChat.chatWith).subscribe(result => {\n            chatMessage.status = ChatMessagesStatus.delivered;\n            that.messageList.push(chatMessage);\n          });\n        } else {\n          that.audio.play()\n            .then(_ => {\n              // sound effect started\n            }).catch(error => {\n            // empty\n          });\n        }\n        that.isNewMessage.next(chatMessage);\n      });\n  }\n\n  showFriendRequestComponent() {\n    this.friendRequestService.getReceivedFriendRequests()\n      .subscribe(result => {\n        this.receivedFriendRequests = result;\n        this.isActiveFriendRequestComponent = true;\n        this.isActiveFriendComponent = false;\n        this.isActiveAddFriendComponent = false;\n        this.isActiveSettingsComponent = false;\n      });\n  }\n\n  showFriendComponent() {\n    this.isActiveFriendComponent = true;\n    this.isActiveFriendRequestComponent = false;\n    this.isActiveAddFriendComponent = false;\n    this.isActiveSettingsComponent = false;\n    this.getUserFriendsChats();\n    this.getUserInformation();\n    this.getUserChatProfile();\n  }\n\n  showAddFriendComponent() {\n    this.friendRequestService.getSentFriendRequests()\n      .subscribe(result => {\n        this.sentFriendRequests = result;\n        this.isActiveAddFriendComponent = true;\n        this.isActiveFriendRequestComponent = false;\n        this.isActiveFriendComponent = false;\n        this.isActiveSettingsComponent = false;\n      });\n  }\n\n  showSettingsComponent() {\n    this.isActiveFriendComponent = false;\n    this.isActiveFriendRequestComponent = false;\n    this.isActiveAddFriendComponent = false;\n    this.isActiveSettingsComponent = true;\n    this.currentFriendChat = null;\n  }\n\n  private getUserInformation() {\n    this.userService.getUser(this.authService.currentUserValue.id).subscribe(user => {\n      this.currentUser = user;\n    });\n  }\n\n  private getUserChatProfile() {\n    this.chatProfileService.getChatProfile(this.authService.currentUserValue.id)\n      .subscribe(userChatProfile => {\n        this.currentUserChatProfile = userChatProfile;\n      });\n  }\n\n  sendFriendRequest() {\n    let invitationCode = this.friendCode.nativeElement.value;\n    invitationCode = invitationCode.replace(/\\s/g, '');\n    if (invitationCode.length !== 0) {\n      this.friendRequestService.postCreateNewFriendRequest(invitationCode)\n        .subscribe(result => {\n          this.sentFriendRequests.push(result);\n          this.showNotificationMessage('We send a new friends request.');\n        }, errorObject => {\n          if (errorObject.status === 404 || errorObject.status === 400 || errorObject.status === 409) {\n            this.showNotificationMessage(errorObject.error.detail);\n          }\n        });\n      this.friendCode.nativeElement.value = '';\n    }\n  }\n\n  initAudioNotification() {\n    this.audio.src = '../../../assets/audio/notification_sound.mp3';\n    this.audio.load();\n  }\n\n  showNotificationMessage(message) {\n    this.notificationMessage = message;\n    this.isNotificationVisible = true;\n    setTimeout(() => {\n      this.isNotificationVisible = false;\n    }, 2500);\n  }\n\n  onDeletedFriendsRequest(resultMessage: string) {\n    this.showNotificationMessage(resultMessage);\n    this.showAddFriendComponent();\n  }\n\n  onReplyFriendsRequest(resultMessage: string) {\n    this.showNotificationMessage(resultMessage);\n    this.showFriendRequestComponent();\n  }\n\n  onScrollMessages(event: Event) {\n    // @ts-ignore\n    if (event.target.scrollTop === 0) {\n      // @ts-ignore\n      this.scrollDivMessagePosition = event.target.scrollHeight;\n      this.getPreviousMessages();\n    }\n  }\n\n  deleteFriendAlert() {\n    this.showDeleteFriendPrompt = true;\n  }\n\n  deleteFriend() {\n    this.friendChatService.deleteFriend(this.currentFriendChat.id, this.currentFriendChat.chatWith)\n      .subscribe(result => {\n        this.getUserFriendsChats();\n        this.showDeleteFriendPrompt = false;\n        this.currentFriendChat = null;\n        this.showNotificationMessage('Friend has been removed.');\n      });\n  }\n\n  cancelDeleteFriend() {\n    this.showDeleteFriendPrompt = false;\n  }\n\n\n}\n","<div role=\"alert\" [ngClass]=\"isNotificationVisible ? 'notification':'notification-hide'\" #notification>\n  <span>{{notificationMessage}}</span>\n</div>\n<div class=\"row text-center shadow-lg p-3 mb-5 bg-white rounded remove-friend-alert\" *ngIf=\"showDeleteFriendPrompt\">\n  <div class=\"col-12\">\n    <span style=\"font-size: 20px\">Are you sure you want to delete this friend?</span>\n  </div>\n  <div class=\"col-12 mt-4\">\n    <button type=\"button\" class=\"btn btn-primary text-left\" (click)=\"deleteFriend()\">Yes, Im sure!</button>\n  </div>\n  <div class=\"col-12 mt-4\">\n    <button type=\"button\" class=\"btn btn-danger text-right\" (click)=\"cancelDeleteFriend()\">Cancel</button>\n  </div>\n  <div class=\"col-12\">\n    <span style=\"font-size: 12px; color: #eb453a\">We also remove all your messages with this user.</span>\n  </div>\n</div>\n<div class=\"container fill\" [ngClass]=\"showDeleteFriendPrompt ? 'blur-container':''\">\n  <div class=\"row fill shadow-lg p-3 mb-5 bg-white rounded\">\n    <div class=\"col-sm-4 chat-box-left\">\n      <div class=\"row chat-box-left-header\">\n        <div class=\"col-sm-12 h-100\">\n          <div class=\"row h-100\">\n            <div class=\"col-12 h-100\">\n              <div *ngIf=\"isActiveFriendComponent\">\n                <span class=\"left-header-text-user\">Hello {{currentUser.firstName + ' ' + currentUser.lastName}}</span>\n                <span\n                  class=\"left-header-text-friends-code\">Friends code: {{currentUserChatProfile.friendsRequestCode}}\n                </span>\n              </div>\n              <div class=\"h-100\"\n                   *ngIf=\"isActiveFriendRequestComponent || isActiveAddFriendComponent || isActiveSettingsComponent\">\n                <div class=\"row h-100\">\n                  <div class=\"col-4 m-auto\">\n                    <input class=\"back-button\" type=\"image\" src=\"/assets/img/back.svg\" (click)=\"showFriendComponent()\"/>\n                  </div>\n                  <div class=\"col-8 text-right m-auto\">\n                    <span class=\"left-header-friend-request-text\"\n                          *ngIf=\"isActiveFriendRequestComponent\">Friends request</span>\n                    <span class=\"left-header-friend-request-text\"\n                          *ngIf=\"isActiveAddFriendComponent\">Invite new friend</span>\n                    <span class=\"left-header-friend-request-text\"\n                          *ngIf=\"isActiveSettingsComponent\">Settings</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row chat-box-left-list\">\n        <div class=\"col-sm-12 friends-list-box h-100\" style=\"overflow-y: auto;\">\n          <!-- Friend component-->\n          <div *ngIf=\"isActiveFriendComponent && friendsChats.length !== 0\">\n            <div *ngFor=\"let friendChat of friendsChats\">\n              <app-friend-chat [conversation]=\"friendChat\"\n                               [isNewMessage]=\"isNewMessage\"\n                               [onClickComponent]=\"clickFriendComponent\"\n                               (click)=\"enterFriendChat(friendChat.id)\"></app-friend-chat>\n            </div>\n          </div>\n          <div class=\"text-center\" style=\"margin-top: 40%;\"\n               *ngIf=\"isActiveFriendComponent && friendsChats.length === 0\">\n            <img src=\"/assets/img/friend_theme.svg\" style=\"max-width: 75%\">\n            <br><br>\n            <span style=\"font-size: 20px\"><b>You don't have any friends</b></span>\n          </div>\n          <!-- -->\n          <!-- Friend request component-->\n          <div *ngIf=\"isActiveFriendRequestComponent && receivedFriendRequests.length !== 0\">\n            <div *ngFor=\"let friendsRequest of receivedFriendRequests\">\n              <app-received-friend-request [friendRequest]=\"friendsRequest\"\n                                           (friendsRequestReply)=\"onReplyFriendsRequest($event)\"></app-received-friend-request>\n            </div>\n          </div>\n          <div class=\"text-center\" style=\"margin-top: 40%;\"\n               *ngIf=\"isActiveFriendRequestComponent && receivedFriendRequests.length === 0\">\n            <img src=\"/assets/img/sad_blue.svg\" style=\"max-width: 75%\">\n            <br><br>\n            <span style=\"font-size: 20px\"><b>No new requests</b></span>\n            <br>\n            <span>When people send you friend requests, they'll appear here.</span>\n          </div>\n          <!-- -->\n          <!-- Add friend-chat component-->\n          <div *ngIf=\"isActiveAddFriendComponent\">\n            <div class=\"row\">\n              <div class=\"input-group mb-3\" style=\"padding: 5px\">\n                <input type=\"text\" class=\"form-control input-friend-code\" placeholder=\"Friend code\"\n                       aria-label=\"Friend code\" aria-describedby=\"basic-addon2\" #friendCode>\n                <div class=\"input-group-append\">\n                  <input type=\"image\" class=\"btn btn-outline-primary border send-friend-request-button\"\n                         (click)=\"sendFriendRequest()\"\n                         src=\"/assets/img/letter.svg\" width=\"60\">\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"isActiveAddFriendComponent && sentFriendRequests.length !==0\">\n              <div *ngFor=\"let friendRequest of sentFriendRequests\">\n                <app-new-friend-request [friendRequest]=\"friendRequest\"\n                                        (friendsRequestHasDeleted)=\"onDeletedFriendsRequest($event)\"></app-new-friend-request>\n              </div>\n            </div>\n            <div class=\"text-center\" style=\"margin-top: 40%;\"\n                 *ngIf=\"isActiveAddFriendComponent && sentFriendRequests.length === 0\">\n              <img src=\"/assets/img/empty_add_friend.svg\" style=\"max-width: 75%\">\n              <br><br>\n              <span style=\"font-size: 20px\"><b>No sent friends request</b></span>\n            </div>\n          </div>\n          <!-- -->\n          <!-- Settings component -->\n          <div class=\"text-center\" style=\"margin-top: 40%;\"\n               *ngIf=\"isActiveSettingsComponent\">\n            <img src=\"/assets/img/settings.svg\" style=\"max-width: 75%\">\n            <br><br>\n            <span style=\"font-size: 20px\"><b>Personal settings</b></span>\n          </div>\n          <!-- -->\n        </div>\n      </div>\n      <div class=\"row chat-box-buttons\">\n        <div class=\"col-sm-12\">\n          <div class=\"row h-100 mr-0\">\n            <div class=\"col-3 text-center w-50 m-auto\">\n              <input class=\"left-buttons-menu-ico nav-button\" type=\"image\" src=\"/assets/img/add_friend.svg\"\n                     (click)=\"showAddFriendComponent()\"/>\n            </div>\n            <div class=\"col-3 text-center w-50 m-auto\">\n              <input class=\"left-buttons-menu-ico nav-button\" type=\"image\" src=\"/assets/img/new_friends_request.svg\"\n                     (click)=\"showFriendRequestComponent()\"/>\n            </div>\n            <div class=\"col-3 text-center w-50 m-auto\">\n              <input class=\"left-buttons-menu-ico nav-button\" type=\"image\" src=\"/assets/img/setting_ico.svg\"\n                     (click)=\"showSettingsComponent()\"/>\n            </div>\n            <div class=\"col-3 text-center w-50 m-auto\">\n              <input class=\"left-buttons-menu-ico nav-button\" type=\"image\" src=\"/assets/img/logout.svg\"\n                     (click)=\"logout()\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8 chat-box-right\">\n      <ng-container\n        *ngIf=\"!isActiveSettingsComponent; then chat; else settings\">\n      </ng-container>\n      <ng-template #chat>\n        <div style=\"height: 7%;\">\n          <div class=\"row chat-current-person-container\" *ngIf=\"currentFriendChat!==null\">\n            <div class=\"col-2 m-auto text-right\">\n              <img src=\"/assets/img/user_avatar.svg\" alt=\"\">\n            </div>\n            <div class=\"col-8 m-auto text-left\">\n              <span class=\"chat-current-person-text\">\n                {{currentRecipientUser.firstName + ' ' + currentRecipientUser.lastName}}\n              </span>\n            </div>\n            <div class=\"col-2 m-auto text-right\">\n              <div class=\"btn-group dropleft\">\n                <input class=\"dropdown-toggle nav-button\" id=\"dropdownMenuButton\" type=\"image\"\n                       src=\"/assets/img/more.svg\"\n                       alt=\"\"\n                       style=\"max-width: 35px\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                  <button class=\"dropdown-item\" (click)=\"deleteFriendAlert()\">Remove</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\" style=\"height: 73%\">\n          <div class=\"col-sm-12 messages-container\" #messageContainer (scroll)=\"onScrollMessages($event)\">\n            <div class=\"row h-100\" *ngIf=\"currentFriendChat === null\">\n              <div class=\"col-12 text-center m-auto w-50\">\n                <img src=\"/assets/img/begin_chat.svg\" alt=\"\" style=\"max-width: 50%;\">\n                <br>\n                <br>\n                <span>Choice your friend and start chatting.</span>\n              </div>\n            </div>\n            <div class=\"h-100\" *ngIf=\"currentFriendChat !== null\">\n              <div class=\"h-100\" *ngIf=\"messageList.length === 0\">\n                <div class=\"row h-100\">\n                  <div class=\"col-12 text-center m-auto w-50\">\n                    <img src=\"/assets/img/no_message.svg\" alt=\"\" style=\"max-width: 50%;\">\n                    <br>\n                    <span>Not found any message</span>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"messageList.length !== 0\">\n                <div *ngFor=\"let message of messageList\">\n                  <app-chat-message [message]=\"message\" (afterRenderMessage)=\"scrollChatMessage()\"\n                                    #appMessage></app-chat-message>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\" style=\"height: 20%\">\n          <div class=\"col-sm-12 h-100\" *ngIf=\"currentFriendChat !== null\">\n            <div class=\"row h-100 m-0\" style=\"padding: 10px;\">\n              <div class=\"input-group mb-3\">\n              <textarea class=\"form-control input-message h-100 send-message-textarea\"\n                        placeholder=\"Type a message\"\n                        aria-label=\"Type a message\" aria-describedby=\"basic-addon2\" #inputMessage\n                        (keyup.enter)=\"sentMessage()\"></textarea>\n                <div class=\"input-group-append\">\n                  <input type=\"image\" class=\"btn btn-outline-primary send-button\" src=\"/assets/img/send.svg\" width=\"50\"\n                         (click)=\"sentMessage()\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n\n      <ng-template #settings>\n        <div class=\"row h-100\">\n          <div class=\"col-sm-12 messages-container\">\n            <div class=\"h-100\">\n              <app-settings (onSettingsOperation)=\"showNotificationMessage($event)\"></app-settings>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashboardComponent} from './dashboard.component';\nimport {ChatMessageComponent} from './chat-message/chat-message.component';\nimport {FriendChatComponent} from './friend-chat/friend-chat.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {ReceivedFriendRequestComponent} from './received-friend-request/received-friend-request.component';\nimport {SettingsComponent} from './settings/settings.component';\nimport {AccountComponent} from './settings/account/account.component';\nimport {ChangePasswordComponent} from './settings/change-password/change-password.component';\nimport {NewFriendRequestComponent} from './new-friend-request/new-friend-request.component';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    ChatMessageComponent,\n    FriendChatComponent,\n    ReceivedFriendRequestComponent,\n    NewFriendRequestComponent,\n    SettingsComponent,\n    AccountComponent,\n    ChangePasswordComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule\n  ]\n})\nexport class DashboardModule {\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ChatMessage} from '../../../shared/models/chat-message';\nimport {ChatMessageService} from '../../../shared/services/chat-message.service';\nimport {first} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {AuthService} from '../../../shared/services/auth.service';\nimport {FriendChat} from '../../../shared/models/friend-chat';\nimport {UserService} from '../../../shared/services/user.service';\nimport {User} from '../../../shared/models/user';\nimport {ChatMessagesStatus} from '../../../shared/enum/chat-messages-status';\n\n@Component({\n  selector: 'app-friend-chat',\n  templateUrl: './friend-chat.component.html',\n  styleUrls: ['./friend-chat.component.css']\n})\nexport class FriendChatComponent implements OnInit {\n\n  @Input('isNewMessage') isNewMessage: Subject<ChatMessage>;\n  @Input('onClickComponent') onClickComponent: Subject<number>;\n  @Input('conversation') friendChat: FriendChat;\n  currentFriendChat: number;\n  lastMessage = {} as ChatMessage;\n  recipientUser = {} as User;\n\n  constructor(private messageService: ChatMessageService,\n              private authService: AuthService,\n              private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.getLastMessage();\n    this.isNewMessage.subscribe(newMessage => {\n      if (this.friendChat.id === newMessage.friendChat || this.friendChat.chatWith === newMessage.friendChat) {\n        this.lastMessage = newMessage;\n      }\n    });\n    this.onClickComponent.subscribe(friendChatId => {\n      this.currentFriendChat = friendChatId;\n      this.markMessageAsDelivered();\n    });\n    this.getRecipientUserInformation();\n  }\n\n  private getRecipientUserInformation() {\n    this.userService.getUser(this.friendChat.recipient.userId)\n      .subscribe(recipient => {\n        this.recipientUser = recipient;\n      });\n  }\n\n  showNotification(): boolean {\n    if (this.currentFriendChat === this.friendChat.id) {\n      return false;\n    } else {\n      return this.lastMessage.status === ChatMessagesStatus.received && this.lastMessage.recipient === this.authService.currentUserValue.id;\n    }\n  }\n\n  getLastMessage() {\n    this.messageService.getLastMessages(1, this.friendChat.id, this.friendChat.chatWith).pipe(first())\n      .subscribe(result => {\n        if (result.length !== 0) {\n          this.lastMessage = result[0];\n        }\n      });\n  }\n\n  markMessageAsDelivered() {\n    if (this.friendChat.id === this.currentFriendChat) {\n      this.messageService.markMessageAsDelivered(this.friendChat.chatWith).subscribe(response => {\n        this.getLastMessage();\n      });\n    }\n  }\n\n\n}\n","<div class=\"row chat\"\n     [ngClass]=\"{'active-chat' :  friendChat.id === currentFriendChat, 'inactive-chat' : friendChat.id !== currentFriendChat}\">\n  <div *ngIf=\"showNotification()\" class=\"chat-notification\"></div>\n  <div class=\"col-2 text-center\" style=\"position: relative; left: 5px;\">\n    <img src=\"/assets/img/user_avatar.svg\" alt=\"\" class=\"friend-ico\">\n  </div>\n  <div class=\"col-7\">\n    <div class=\"row\">\n      <div class=\"col-12\" style=\"font-size: 22px\">\n        {{recipientUser.firstName + ' ' + recipientUser.lastName}}\n      </div>\n      <div class=\"col-12\">\n        <span *ngIf=\"lastMessage.content; else noMessage\" class=\"last-message\">\n          {{lastMessage.content}}\n        </span>\n      </div>\n      <ng-template #noMessage>\n        <span class=\"last-message\"><i>No messages.</i></span>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"col-lg-3 text-right\" style=\"font-size: 13px;\">\n    {{lastMessage.time | date: 'mediumDate'}}\n  </div>\n</div>\n\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FriendRequestService} from '../../../shared/services/friend-request.service';\nimport {FriendRequest} from '../../../shared/models/friend-request';\nimport {UserService} from '../../../shared/services/user.service';\nimport {User} from '../../../shared/models/user';\n\n@Component({\n  selector: 'app-new-friend-request',\n  templateUrl: './new-friend-request.component.html',\n  styleUrls: ['./new-friend-request.component.css']\n})\nexport class NewFriendRequestComponent implements OnInit {\n\n  recipientUser = {} as User;\n\n  @Input('friendRequest')\n  friendRequest: FriendRequest = null;\n\n  @Output()\n  friendsRequestHasDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private friendRequestService: FriendRequestService,\n              private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.friendRequest.recipient.userId)\n      .subscribe(recipient => {\n        this.recipientUser = recipient;\n      });\n  }\n\n  cancelFriendRequest() {\n    this.friendRequestService.cancelSentFriendRequest(this.friendRequest.id)\n      .subscribe(result => {\n        this.friendsRequestHasDeleted.emit('Friend request deleted.');\n      });\n  }\n\n}\n","<div class=\"row text-left row-container\">\n  <div class=\"col-8\">\n    <span>You sent friends request to</span>\n    <br>\n    <span><b>{{recipientUser.firstName + ' ' + recipientUser.lastName}}</b></span>\n  </div>\n  <div class=\"col-4 text-left\">\n    <input class=\"reject-ico\" type=\"image\" src=\"/assets/img/reject.svg\" (click)=\"cancelFriendRequest()\"/>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FriendRequest} from '../../../shared/models/friend-request';\nimport {FriendRequestService} from '../../../shared/services/friend-request.service';\nimport {UserService} from '../../../shared/services/user.service';\nimport {User} from '../../../shared/models/user';\n\n@Component({\n  selector: 'app-received-friend-request',\n  templateUrl: './received-friend-request.component.html',\n  styleUrls: ['./received-friend-request.component.css']\n})\nexport class ReceivedFriendRequestComponent implements OnInit {\n\n  senderUser = {} as User;\n\n  @Input('friendRequest')\n  friendRequest: FriendRequest;\n\n  @Output()\n  friendsRequestReply: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private friendService: FriendRequestService,\n              private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.friendRequest.sender.userId)\n      .subscribe(sender => {\n        this.senderUser = sender;\n      });\n  }\n\n  acceptFriendsRequest() {\n    this.friendService.replyToFriendsRequest(this.friendRequest.id, true)\n      .subscribe(result => {\n        this.friendsRequestReply.emit('Friends request has been accepted');\n      });\n  }\n\n  rejectFriendsRequest() {\n    this.friendService.replyToFriendsRequest(this.friendRequest.id, false)\n      .subscribe(result => {\n        this.friendsRequestReply.emit('Friends request has been rejected');\n      });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-12\" style=\"border-bottom: 1px solid #c4c4c4;\">\n    <div class=\"row\" style=\"padding: 5px\">\n      <div class=\"col-2 m-auto pl-2\">\n        <img src=\"/assets/img/user_avatar.svg\" alt=\"\" style=\"max-width: 35px\">\n      </div>\n      <div class=\"col-10\">\n        <div class=\"row\">\n          <div class=\"col-12 \" style=\"font-size: 15px\">\n            <b>{{senderUser.firstName + ' ' + senderUser.lastName}}</b> sent you a friend\n            request.\n          </div>\n          <div class=\"col-12 pt-2\" style=\"font-size: 13px\">\n            <div class=\"row\">\n              <div class=\"col-6  text-center\">\n                <input class=\"action-ico\" type=\"image\" src=\"/assets/img/accept.svg\" (click)=\"acceptFriendsRequest()\"/>\n              </div>\n              <div class=\"row-6  text-center\">\n                <input class=\"action-ico\" type=\"image\" src=\"/assets/img/reject.svg\" (click)=\"rejectFriendsRequest()\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, ElementRef, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {User} from '../../../../shared/models/user';\nimport {AuthService} from '../../../../shared/services/auth.service';\nimport {UserService} from '../../../../shared/services/user.service';\nimport {ChatProfile} from '../../../../shared/models/chat-profile';\nimport {ChatProfileService} from '../../../../shared/services/chat-profile.service';\n\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  @ViewChild('firstName') firstName: ElementRef;\n  @ViewChild('lastName') lastName: ElementRef;\n\n  firstNameValidationError: string = null;\n  lastNameValidationError: string = null;\n  user = {} as User;\n  chatProfile = {} as ChatProfile;\n\n  @Output() onChangeAccountInformationRequest: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private authService: AuthService,\n              private accountService: UserService,\n              private chatProfileService: ChatProfileService) {\n  }\n\n  ngOnInit(): void {\n    this.accountService.getUser(this.authService.currentUserValue.id).subscribe(result => {\n      this.user = result;\n    });\n\n    this.chatProfileService.getChatProfile(this.authService.currentUserValue.id)\n      .subscribe(result => {\n        this.chatProfile = result;\n      });\n\n  }\n\n  generateNewFriendsCode() {\n    this.chatProfileService.generateNewFriendsCode(this.authService.currentUserValue.id)\n      .subscribe(result => {\n        this.chatProfile = result;\n      });\n  }\n\n  saveAccountsChanges() {\n\n    this.accountService.modifyUserInformation(this.authService.currentUserValue.id,\n      {\n        firstName: this.firstName.nativeElement.value,\n        lastName: this.lastName.nativeElement.value\n      }).subscribe(result => {\n      this.firstName.nativeElement.value = result.firstName;\n      this.lastName.nativeElement.value = result.lastName;\n      this.firstNameValidationError = null;\n      this.lastNameValidationError = null;\n      this.onChangeAccountInformationRequest.emit('Information successfully updated');\n    }, errorObject => {\n\n      if (errorObject.status === 400) {\n        const violationsErrors = errorObject.error.violations;\n        if (violationsErrors) {\n          violationsErrors.forEach(error => {\n            if (error.field === 'firstName') {\n              this.firstNameValidationError = error.message;\n            }\n            if (error.field === 'lastName') {\n              this.lastNameValidationError = error.message;\n            }\n          });\n        }\n      }\n    });\n  }\n\n\n}\n","<div class=\"tab-pane fade show active\" id=\"accountSettings\" role=\"tabpanel\" aria-labelledby=\"account-tab\">\n  <div class=\"form-group row\">\n    <!--<label for=\"invitation-code\" class=\"col-sm-3 col-form-label\">Invitation code</label>\n    <div class=\"col-sm-5\">\n      <input type=\"text\" readonly class=\"form-control-plaintext no-input-border\" id=\"invitation-code\"\n             value=\"{{chatProfile.friendsRequestCode}}\">\n    </div> -->\n    <!-- <div class=\"col-sm-4\">\n      <p class=\"lead text-center\">\n        <button class=\"btn btn-primary\" (click)=\"generateNewFriendsCode()\">Renew code</button>\n      </p>\n    </div> -->\n  </div>\n  <div class=\"form-group row\">\n    <label for=\"staticLogin\" class=\"col-sm-3 col-form-label\">Login</label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" readonly class=\"form-control-plaintext no-input-border\" id=\"staticLogin\"\n             value=\"{{user.username}}\">\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <label for=\"staticEmail\" class=\"col-sm-3 col-form-label\">Email</label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" readonly class=\"form-control-plaintext no-input-border\" id=\"staticEmail\"\n             value=\"{{user.email}}\">\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <label for=\"firstName\" class=\"col-sm-3 col-form-label\">First name</label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control account-info-input\" id=\"firstName\" placeholder=\"First name\"\n             value=\"{{user.firstName}}\" #firstName/>\n      <small class=\"form-text text-danger\" *ngIf=\"firstNameValidationError\">\n        {{firstNameValidationError}}\n      </small>\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <label for=\"lastName\" class=\"col-sm-3 col-form-label\">Last name</label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control account-info-input\" id=\"lastName\" placeholder=\"Last name\"\n             value=\"{{user.lastName}}\" #lastName/>\n      <small class=\"form-text text-danger\" *ngIf=\"lastNameValidationError\">\n        {{lastNameValidationError}}\n      </small>\n    </div>\n  </div>\n  <p class=\"lead text-center\">\n    <a class=\"btn btn-primary\" (click)=\"saveAccountsChanges()\">Save changes</a>\n  </p>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../../shared/services/user.service';\nimport {AuthService} from '../../../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  changePasswordForm: FormGroup;\n\n  @Output() onChangePasswordRequest: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private accountService: UserService,\n              private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n    this.initLoginForm();\n  }\n\n  saveNewPassword() {\n\n    if (this.changePasswordForm.valid) {\n\n      if (this.newPassword.value !== this.confirmNewPassword.value) {\n        this.newPassword.reset();\n        this.confirmNewPassword.setErrors({violations: 'Password not match'});\n        return;\n      }\n\n      this.accountService.changePassword(this.authService.currentUserValue.id,\n        {\n          currentPassword: this.currentPassword.value,\n          newPassword: this.newPassword.value\n        }).subscribe(result => {\n        this.onChangePasswordRequest.emit('Password changed');\n        this.currentPassword.reset();\n        this.confirmNewPassword.reset();\n        this.newPassword.reset();\n      }, errorObject => {\n        if (errorObject.status === 400) {\n          const violationsErrors = errorObject.error.violations;\n          if (violationsErrors) {\n            violationsErrors.forEach(error => {\n              if (error.field === 'newPassword') {\n                this.newPassword.setValue('');\n                this.confirmNewPassword.reset();\n                this.newPassword.setErrors({violations: error.message});\n              }\n            });\n          }\n\n          const messageDetailsError = errorObject.error.detail;\n          if (messageDetailsError) {\n            this.currentPassword.setValue('');\n            this.currentPassword.setErrors({violations: messageDetailsError});\n            this.newPassword.reset();\n            this.confirmNewPassword.reset();\n          }\n\n        }\n\n      });\n    }\n  }\n\n  initLoginForm() {\n    this.changePasswordForm = new FormGroup({\n      currentPassword: new FormControl('', [Validators.required]),\n      newPassword: new FormControl('', [Validators.required]),\n      confirmNewPassword: new FormControl('', [Validators.required])\n    });\n  }\n\n  get currentPassword() {\n    return this.changePasswordForm.get('currentPassword');\n  }\n\n  get newPassword() {\n    return this.changePasswordForm.get('newPassword');\n  }\n\n  get confirmNewPassword() {\n    return this.changePasswordForm.get('confirmNewPassword');\n  }\n\n}\n","<div class=\"tab-pane fade\" id=\"passwordSettings\" role=\"tabpanel\" aria-labelledby=\"change-password-tab\">\n  <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"saveNewPassword()\">\n    <div class=\"form-group\">\n      <label for=\"currentPassword\">Current password</label>\n      <input type=\"password\" class=\"form-control password-input\" id=\"currentPassword\" formControlName=\"currentPassword\"\n             placeholder=\"Current password\">\n      <div *ngIf=\"currentPassword.invalid && (currentPassword.dirty || currentPassword.touched)\">\n        <small id=\"info-current-password\" class=\"form-text text-danger password-input\"\n               *ngIf=\"currentPassword.errors.required\">\n          Pass your current password.\n        </small>\n        <small class=\"form-text text-danger\" *ngIf=\"currentPassword.errors.minlength\">\n          Current password can not be empty.\n        </small>\n        <div *ngIf=\"currentPassword.getError('violations')\">\n          <small class=\"form-text text-danger\" [innerHTML]=\"currentPassword.getError('violations')\">\n          </small>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"newPassword\">New password</label>\n      <input type=\"password\" class=\"form-control password-input\" id=\"newPassword\" formControlName=\"newPassword\"\n             placeholder=\"New password\">\n      <div *ngIf=\"newPassword.invalid && (newPassword.dirty || newPassword.touched)\">\n        <small id=\"info-new-password\" class=\"form-text text-danger\" *ngIf=\"newPassword.errors.required\">\n          Pass your new password.\n        </small>\n        <div *ngIf=\"newPassword.getError('violations')\">\n          <small  class=\"form-text text-danger\" [innerHTML]=\"newPassword.getError('violations')\">\n          </small>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"confirmNewPassword\">Confirm new password</label>\n      <input type=\"password\" class=\"form-control password-input\" id=\"confirmNewPassword\"\n             formControlName=\"confirmNewPassword\"\n             placeholder=\"Confirm new password\">\n      <div *ngIf=\"confirmNewPassword.invalid && (confirmNewPassword.dirty || confirmNewPassword.touched)\">\n        <small id=\"info-confirm-password\" class=\"form-text text-danger\" *ngIf=\"confirmNewPassword.errors.required\">\n          Confirm new password.\n        </small>\n        <div *ngIf=\"confirmNewPassword.getError('violations')\">\n          <small class=\"form-text text-danger\" [innerHTML]=\"confirmNewPassword.getError('violations')\">\n          </small>\n        </div>\n      </div>\n    </div>\n    <p class=\"lead text-center\">\n      <input type=\"submit\" class=\"btn btn-primary\" value=\"Save new password\"/>\n    </p>\n  </form>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  displayAccountSettings = true;\n  displayPasswordSettings = false;\n\n  @Output()\n  onSettingsOperation: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  accountSettings() {\n    this.displayAccountSettings = true;\n    this.displayPasswordSettings = false;\n  }\n\n  passwordSettings() {\n    this.displayAccountSettings = false;\n    this.displayPasswordSettings = true;\n  }\n\n  onChangePasswordRequest($event: string) {\n    this.onSettingsOperation.emit($event);\n  }\n}\n","<div class=\"home-container text-center\">\n  <div class=\"cover-container d-flex h-100 flex-column\">\n    <main role=\"main\" class=\"inner cover\">\n      <ul class=\"nav justify-content-center\" role=\"tablist\" style=\"background-color: #ffffff\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" href=\"#accountSettings\" (click)=\"accountSettings()\" data-toggle=\"tab\" role=\"tab\">Account\n            information</a>\n        </li>\n        <!-- <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#passwordSettings\" (click)=\"passwordSettings()\" data-toggle=\"tab\" role=\"tab\">Change\n            password</a>\n        </li> -->\n      </ul>\n      <div class=\"tab-content text-left\" id=\"myTabContent\" style=\"margin-top: 15%\">\n        <div *ngIf=\"displayAccountSettings\">\n          <app-account (onChangeAccountInformationRequest)=\"onChangePasswordRequest($event)\"></app-account>\n        </div>\n        <div *ngIf=\"displayPasswordSettings\">\n          <app-change-password (onChangePasswordRequest)=\"onChangePasswordRequest($event)\"></app-change-password>\n        </div>\n      </div>\n    </main>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../shared/services/auth.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private router: Router) {\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n","<div class=\"home-container text-center\">\n  <div class=\"cover-container d-flex h-100 p-3 mx-auto flex-column\">\n    <header class=\"masthead mb-auto\">\n      <div class=\"inner\">\n        <nav class=\"nav nav-masthead justify-content-center\">\n        </nav>\n      </div>\n    </header>\n\n    <main role=\"main\" class=\"inner cover\">\n      <h1 class=\"cover-heading\"><b>Scorpio</b></h1>\n      <p class=\"lead secondary-headlight mt-4\">Be close with your</p>\n      <p class=\"lead\">\n        <a href=\"#\" class=\"btn btn-lg btn-secondary mt-5 pl-5 pr-5\" routerLink=\"/login\">Sign in and start chatting!</a>\n      </p>\n    </main>\n\n    <footer class=\"mastfoot mt-auto\">\n\n    </footer>\n  </div>\n</div>\n\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HomeComponent} from './home.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {RouterModule} from '@angular/router';\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  exports: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule\n  ]\n})\nexport class HomeModule {\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex align-items-center justify-content-center flex-column page-container\">\n  <div class=\"page-column\">\n    <img src=\"/assets/img/404.svg\" alt=\"\" class=\"page-img\"/>\n  </div>\n  <div class=\"page-column\">\n    <span class=\"page-text\">Page not found</span>\n  </div>\n  <div class=\"page-column mt-5\">\n    <button type=\"button\" class=\"btn btn-primary btn-lg\" routerLink=\"/home\">Back to home</button>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../services/user.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  notificationMessage = '';\n  loginForm: FormGroup;\n  showLoginSpinner = false;\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private accountService: UserService,\n              private activatedRoute: ActivatedRoute,) {\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.initLoginForm();\n\n    this.activatedRoute.queryParams.subscribe(param => {\n      if (param.data) {\n        this.activateAccount(param.data);\n      }\n      if (param.registration) {\n        this.notificationMessage = 'Please check our mail box and confirm your email address.';\n      }\n      if (param.activation) {\n        this.notificationMessage = 'Email confirmed. You can log in.';\n      }\n    });\n\n  }\n\n  loginProcess() {\n    if (this.loginForm.valid) {\n      this.showLoginSpinner = true;\n      this.authService.login(this.login.value, this.password.value)\n        .subscribe(result => {\n          this.showLoginSpinner = false;\n          this.router.navigate(['/dashboard']);\n        }, errorResponse => {\n          this.showLoginSpinner = false;\n          this.login.reset();\n          this.password.reset();\n          this.notificationMessage = JSON.parse(JSON.stringify(errorResponse)).error.details;\n        });\n    }\n  }\n\n  private initLoginForm() {\n    this.loginForm = new FormGroup({\n      login: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n\n  activateAccount(activationKey) {\n    this.accountService.activateUser(activationKey).subscribe(result => {\n      this.router.navigate(['/login'], {queryParams: {activation: 'success'}});\n    });\n  }\n\n  get login() {\n    return this.loginForm.get('login');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n}\n","<div class=\"d-flex flex-column page-container\">\n  <div class=\"page-column\">\n    <img src=\"/assets/img/login_theme.svg\" alt=\"\" class=\"login-pic\"/>\n  </div>\n  <div class=\"page-column mt-5\">\n    <span class=\"login-main-text\">Sign in</span>\n  </div>\n  <div class=\"page-column mt-3\" *ngIf=\"notificationMessage\">\n    <div class=\"alert alert-primary pl-5 pr-5\" role=\"alert\">\n      <span class=\"notification-text\">{{notificationMessage}}</span>\n    </div>\n  </div>\n  <div class=\"page-column mt-3\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginProcess()\">\n      <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control credential-input has-warning\" id=\"login\" placeholder=\"Login or email\"\n               formControlName=\"login\"/>\n        <small *ngIf=\"login.invalid && (login.dirty || login.touched)\" class=\"form-text text-danger validation-text\">\n          Login is required.\n        </small>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"password\" class=\"form-control credential-input\" id=\"password\" placeholder=\"Password\"\n               formControlName=\"password\"/>\n        <small *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n               class=\"form-text text-danger validation-text\">\n          Password is required.\n        </small>\n      </div>\n      <div style=\"text-align: right\">\n        <span class=\"sign-up-text\">No account yet? <a routerLink=\"/register\">Sign up!</a></span>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary pl-5 pr-5 mt-4\" [disabled]=\"loginForm.invalid\">\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" *ngIf=\"showLoginSpinner\"></span>\n        Login\n      </button>\n    </form>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  showLoadingSpinner = false;\n  notificationMessage = '';\n  registrationForm: FormGroup;\n\n  constructor(private authService: AuthService,\n              private router: Router) {\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.initRegistrationForm();\n  }\n\n  private initRegistrationForm() {\n    this.registrationForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('', [Validators.required]),\n    });\n  }\n\n\n  processRegistration() :void{\n\n    // this.authService.register({\n    //   username: this.username.value,\n    //   password: this.password.value,\n    //   firstName: this.firstName.value,\n    //   lastName: this.lastName.value,\n    //   email: this.email.value\n    // }).subscribe();\n    // console.log(\"hanh\");\n\n    this.resetNotificationError();\n    if (!this.isConfirmPasswordAreTheSameAsPassword()) {\n      this.setViolationsError(this.confirmPassword, 'Passwords not match');\n      return;\n    }\n\n    if (this.registrationForm.valid) {\n      this.showLoadingSpinner = true;\n\n      this.authService.register({\n        username: this.username.value,\n        password: this.password.value,\n        firstName: this.firstName.value,\n        lastName: this.lastName.value,\n        email: this.email.value\n      }).subscribe(result => {\n        this.showLoadingSpinner = false;\n        this.router.navigate(['/login'], {queryParams: {registration: 'success'}});\n      }, errorObject => {\n        this.showLoadingSpinner = false;\n        if (errorObject.status === 400) {\n          const violationsErrors = errorObject.error.violations;\n          violationsErrors.forEach(error => {\n            if (error.field === 'password') {\n              this.password.setValue('');\n              this.confirmPassword.reset();\n              this.setViolationsError(this.password, error.message);\n            }\n            if (error.field === 'email') {\n              this.setViolationsError(this.email, error.message);\n            }\n            if (error.field === 'username') {\n              this.setViolationsError(this.username, error.message);\n            }\n            if (error.field === 'firstName') {\n              this.setViolationsError(this.firstName, error.message);\n            }\n            if (error.field === 'lastName') {\n              this.setViolationsError(this.lastName, error.message);\n            }\n          });\n        }\n        if (errorObject.status === 409) {\n          this.notificationMessage = errorObject.error.detail;\n        }\n      });\n    }\n  }\n\n  setViolationsError(control: AbstractControl, error: string) {\n    if (control.getError('violations')) {\n      control.setErrors({violations: control.getError('violations') + '<br>' + error});\n    } else {\n      control.setErrors({violations: error});\n    }\n  }\n\n  resetNotificationError() {\n    this.notificationMessage = '';\n  }\n\n  isConfirmPasswordAreTheSameAsPassword() {\n    return this.password.value === this.confirmPassword.value;\n  }\n\n  get username() {\n    return this.registrationForm.get('username');\n  }\n\n  get email() {\n    return this.registrationForm.get('email');\n  }\n\n  get firstName() {\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName() {\n    return this.registrationForm.get('lastName');\n  }\n\n  get password() {\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword() {\n    return this.registrationForm.get('confirmPassword');\n  }\n\n}\n","<div class=\"d-flex flex-column page-container\">\n  <div class=\"page-column\">\n    <img src=\"/assets/img/registration_theme.svg\" alt=\"\" class=\"registration-pic\"/>\n  </div>\n  <div class=\"page-column\">\n    <span class=\"registration-main-text\">Sign up</span>\n  </div>\n  <div class=\"page-column mt-2 align-items-center\" *ngIf=\"notificationMessage\">\n    <div class=\"alert alert-primary pl-5 pr-5\" role=\"alert\">\n      <span class=\"notification-text\">{{notificationMessage}}</span>\n    </div>\n  </div>\n  <div class=\"page-column mt-2 pb-5\">\n    <form [formGroup]=\"registrationForm\" (ngSubmit)=\"processRegistration()\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\" style=\"text-align: left\">\n          <label for=\"firstName\">First name</label>\n          <input type=\"text\" class=\"form-control registration-input\" id=\"firstName\" placeholder=\"First name\"\n                 formControlName=\"firstName\">\n          <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"firstName.errors.required\">\n              First name is required.\n            </small>\n            <div *ngIf=\"firstName.getError('violations')\">\n              <small class=\"form-text text-danger\" [innerHTML]=\"firstName.getError('violations')\">\n              </small>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group col-md-6\" style=\"text-align: left\">\n          <label for=\"lastName\">Last name</label>\n          <input type=\"text\" class=\"form-control registration-input\" id=\"lastName\" placeholder=\"Last name\"\n                 formControlName=\"lastName\">\n          <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"lastName.errors.required\">\n              Last name is required.\n            </small>\n            <div *ngIf=\"lastName.getError('violations')\">\n              <small class=\"form-text text-danger\" [innerHTML]=\"lastName.getError('violations')\">\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\" style=\"text-align: left\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" class=\"form-control registration-input\" id=\"username\" placeholder=\"Username\"\n               formControlName=\"username\">\n        <div *ngIf=\"username.invalid && (username.dirty || username.touched)\">\n          <small class=\"form-text text-danger\" *ngIf=\"username.errors.required\">\n            Username is required.\n          </small>\n          <div *ngIf=\"username.getError('violations')\">\n            <small class=\"form-text text-danger\" [innerHTML]=\"username.getError('violations')\">\n            </small>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\" style=\"text-align: left\">\n        <label for=\"address-email\">Email</label>\n        <input type=\"email\" class=\"form-control registration-input\" id=\"address-email\" placeholder=\"Email\"\n               formControlName=\"email\">\n        <div *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n          <small class=\"form-text text-danger\" *ngIf=\"email.errors.required\">\n            Email is required.\n          </small>\n          <div *ngIf=\"email.getError('violations')\">\n            <small class=\"form-text text-danger\" [innerHTML]=\"email.getError('violations')\">\n            </small>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\" style=\"text-align: left\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control registration-input\" id=\"password\" placeholder=\"Password\"\n                 formControlName=\"password\">\n          <div *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"password.errors.required\">\n              Password is required.\n            </small>\n            <div *ngIf=\"password.getError('violations')\">\n              <small class=\"form-text text-danger\" [innerHTML]=\"password.getError('violations')\">\n              </small>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group col-md-6\" style=\"text-align: left\">\n          <label for=\"confirm-password\">Confirm password</label>\n          <input type=\"password\" class=\"form-control registration-input\" id=\"confirm-password\"\n                 placeholder=\"Confirm password\" formControlName=\"confirmPassword\">\n          <div *ngIf=\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"confirmPassword.errors.required\">\n              Please confirm password.\n            </small>\n            <div *ngIf=\"confirmPassword.getError('violations')\">\n              <small class=\"form-text text-danger\" [innerHTML]=\"confirmPassword.getError('violations')\">\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style=\"text-align: right\">\n        <span class=\"sign-in-text\">Already have an account? <a routerLink=\"/login\">Sign in!</a></span>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary pl-5 pr-5 mt-4\" [disabled]=\"registrationForm.invalid\">\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"\n              *ngIf=\"showLoadingSpinner\"></span>\n        Register now\n      </button>\n    </form>\n  </div>\n\n</div>\n\n\n\n","export enum ChatMessagesStatus {\n  received = 'RECEIVED',\n  delivered = 'DELIVERED'\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthService\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../services/auth.service';\n\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthService) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    const currentUser = this.authenticationService.currentUserValue;\n    const token = this.authenticationService.getToken();\n    if (currentUser && token != null) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {User} from '../models/user';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {WsMessagesService} from './ws-messages.service';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient, private wsMessagesService: WsMessagesService) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  login(credentialLogin, credentialPassword): Observable<any> {\n    const helper = new JwtHelperService();\n\n    return this.http.post(environment.baseApiUrl + environment.authServiceResource + `/users/authenticate`, {\n      username: credentialLogin,\n      password: credentialPassword\n    })\n      .pipe(map(result => {\n        const accessToken = JSON.parse(JSON.stringify(result)).access_token;\n        const decodedToken = helper.decodeToken(accessToken);\n        const user = {\n          id: decodedToken.sub\n        };\n        localStorage.setItem('access_token', accessToken);\n        localStorage.setItem('user', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return result;\n      }));\n  }\n\n  register(data): Observable<any> {\n    console.log(environment.baseApiUrl + environment.authServiceResource + `/users/user`);\n    return this.http.post(environment.baseApiUrl + environment.authServiceResource + `/users/user`, data);\n    \n  }\n\n  logout() {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    this.wsMessagesService.disconnect();\n    this.currentUserSubject.next(null);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {ChatMessage} from '../models/chat-message';\n\n@Injectable({providedIn: 'root'})\nexport class ChatMessageService {\n\n  private chatMessageResource = '/chat-messages';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getLastMessages(size, friendChatId, friendChatWithId) {\n    const params = new HttpParams()\n      .set('friend_chat_id1', friendChatId)\n      .set('friend_chat_id2', friendChatWithId)\n      .set('size', size);\n    return this.http.get<ChatMessage[]>(environment.baseApiUrl + environment.chatMessagesServiceResource +\n      this.chatMessageResource + '?' + params.toString());\n  }\n\n  getPreviousMessages(size, friendChatId, friendChatWithId, from) {\n    const params = new HttpParams()\n      .set('friend_chat_id1', friendChatId)\n      .set('friend_chat_id2', friendChatWithId)\n      .set('size', size)\n      .set('from', from);\n\n    return this.http.get<ChatMessage[]>(environment.baseApiUrl + environment.chatMessagesServiceResource +\n      this.chatMessageResource + '?' + params.toString());\n  }\n\n  markMessageAsDelivered(friendChatId) {\n    const params = new HttpParams().set('friend_chat_id', friendChatId);\n    return this.http.patch(environment.baseApiUrl + environment.chatMessagesServiceResource +\n      this.chatMessageResource + '?' + params.toString(), {});\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {ChatProfile} from '../models/chat-profile';\n\n\n@Injectable({providedIn: 'root'})\nexport class ChatProfileService {\n\n  private chatProfileResource = '/chat-profiles';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getChatProfile(userId: string) {\n    return this.http.get<ChatProfile>(environment.baseApiUrl + environment.chatServiceResource + this.chatProfileResource + '/' + userId);\n  }\n\n  generateNewFriendsCode(userId: string) {\n    return this.http.patch<ChatProfile>(environment.baseApiUrl + environment.chatServiceResource +\n      this.chatProfileResource + '/' + userId + '/new-friends-request-code', {});\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {FriendChat} from '../models/friend-chat';\n\n@Injectable({providedIn: 'root'})\nexport class FriendChatService {\n\n  private friendChatResource = '/friends-chats';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  getFriendsChats() {\n    return this.http.get<FriendChat[]>(environment.baseApiUrl + environment.chatServiceResource + this.friendChatResource);\n  }\n\n  deleteFriend(chatFriendId, chatFriendWithId) {\n    const params = new HttpParams()\n      .set('friend_chat', chatFriendId)\n      .set('friend_chat_with', chatFriendWithId);\n    return this.http.delete(environment.baseApiUrl + environment.chatServiceResource + this.friendChatResource\n      + '?' + params.toString());\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {baseUrl, environment} from '../../../environments/environment';\nimport {FriendRequest} from '../models/friend-request';\n\n\n@Injectable({providedIn: 'root'})\nexport class FriendRequestService {\n\n  private friendRequestResource = '/friend-requests';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getReceivedFriendRequests() {\n    return this.http\n      .get<FriendRequest[]>(environment.baseApiUrl + environment.chatServiceResource + this.friendRequestResource + '/received');\n  }\n\n  getSentFriendRequests() {\n    return this.http\n      .get<FriendRequest[]>(environment.baseApiUrl + environment.chatServiceResource + this.friendRequestResource + '/sent');\n  }\n\n  postCreateNewFriendRequest(invitationCode) {\n    const params = new HttpParams().set('invite_code', invitationCode);\n    return this.http.post<FriendRequest>(environment.baseApiUrl + environment.chatServiceResource +\n      this.friendRequestResource + '?' + params.toString(), {});\n  }\n\n  replyToFriendsRequest(id, accept) {\n    const params = new HttpParams().set('accept', accept);\n    return this.http.patch(environment.baseApiUrl + environment.chatServiceResource +\n      this.friendRequestResource + '/' + id + '?' + params.toString(), {});\n  }\n\n\n  cancelSentFriendRequest(id) {\n    return this.http.delete(environment.baseApiUrl + environment.chatServiceResource + this.friendRequestResource +\n      '/' + id);\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {User} from '../models/user';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n\n  private userResource = '/users';\n\n  constructor(private http: HttpClient) {\n  }\n\n  activateUser(activationKey) {\n    const params = new HttpParams().set('data', activationKey);\n    return this.http.patch(environment.baseApiUrl + environment.authServiceResource +\n      this.userResource + '/activate?' + params.toString(), {});\n  }\n\n  getUser(userId: string) {\n    return this.http.get<User>(environment.baseApiUrl + environment.authServiceResource +\n      this.userResource + '/' + userId);\n  }\n\n  changePassword(userId: string, newPassword) {\n    return this.http.patch(environment.baseApiUrl + environment.authServiceResource +\n      this.userResource + '/' + userId + '/change-password', newPassword);\n  }\n\n  modifyUserInformation(id: string, user: User) {\n    return this.http.patch<User>(environment.baseApiUrl + environment.authServiceResource +\n      this.userResource + '/' + id, user);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment, wsBaseUrl} from '../../../environments/environment';\nimport * as Stomp from 'stompjs';\n\n@Injectable({providedIn: 'root'})\nexport class WsMessagesService {\n\n  private messagingWebsocketServiceResource = '/messages-websocket-service/ws';\n  ws: any;\n\n  constructor() {\n  }\n\n  connect(token, afterWebSocketConnected) {\n    this.ws = Stomp.client(environment.websocketBaseUrl + environment.websocketMessageServiceResource + '/ws');\n    this.ws.connect({\n      Authorization: 'Bearer ' + token\n      // tslint:disable-next-line:only-arrow-functions\n    }, function(frame) {\n      afterWebSocketConnected.wsAfterConnected();\n    });\n  }\n\n  sendMessage(message) {\n    return this.ws.send('/app/chat', {}, JSON.stringify(message));\n  }\n\n  disconnect() {\n    if (this.ws != null) {\n      this.ws.ws.close();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\nimport {RouterModule} from '@angular/router';\nimport {SignUpComponent} from './components/sign-up/sign-up.component';\nimport {SignInComponent} from './components/sign-in/sign-in.component';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n  declarations: [NotFoundComponent, SignUpComponent, SignInComponent],\n  exports: [\n    NotFoundComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseApiUrl: 'http://34.125.87.47:8080',\n  websocketBaseUrl: 'ws://34.125.87.47:8080',\n  authServiceResource: '/auth-service',\n  chatServiceResource: '/chat-service',\n  chatMessagesServiceResource: '/chat-messages-service',\n  websocketMessageServiceResource: '/messages-websocket-service'\n};\n\nexport const baseUrl = 'http://34.125.87.47:8080';\nexport const wsBaseUrl = 'ws://34.125.87.47:8080';\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}