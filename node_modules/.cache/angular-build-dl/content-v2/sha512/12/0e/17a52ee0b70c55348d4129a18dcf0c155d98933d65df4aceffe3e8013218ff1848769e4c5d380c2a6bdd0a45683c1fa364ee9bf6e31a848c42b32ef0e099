{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/dashboard/chat-message/chat-message.component.ts","webpack:///src/app/modules/dashboard/chat-message/chat-message.component.html","webpack:///src/app/modules/dashboard/dashboard.component.ts","webpack:///src/app/modules/dashboard/dashboard.component.html","webpack:///src/app/modules/dashboard/dashboard.module.ts","webpack:///src/app/modules/dashboard/friend-chat/friend-chat.component.ts","webpack:///src/app/modules/dashboard/friend-chat/friend-chat.component.html","webpack:///src/app/modules/dashboard/new-friend-request/new-friend-request.component.ts","webpack:///src/app/modules/dashboard/new-friend-request/new-friend-request.component.html","webpack:///src/app/modules/dashboard/received-friend-request/received-friend-request.component.ts","webpack:///src/app/modules/dashboard/received-friend-request/received-friend-request.component.html","webpack:///src/app/modules/dashboard/settings/account/account.component.ts","webpack:///src/app/modules/dashboard/settings/account/account.component.html","webpack:///src/app/modules/dashboard/settings/change-password/change-password.component.ts","webpack:///src/app/modules/dashboard/settings/change-password/change-password.component.html","webpack:///src/app/modules/dashboard/settings/settings.component.ts","webpack:///src/app/modules/dashboard/settings/settings.component.html","webpack:///src/app/modules/home/home.component.ts","webpack:///src/app/modules/home/home.component.html","webpack:///src/app/modules/home/home.module.ts","webpack:///src/app/shared/components/not-found/not-found.component.ts","webpack:///src/app/shared/components/not-found/not-found.component.html","webpack:///src/app/shared/components/sign-in/sign-in.component.ts","webpack:///src/app/shared/components/sign-in/sign-in.component.html","webpack:///src/app/shared/components/sign-up/sign-up.component.ts","webpack:///src/app/shared/components/sign-up/sign-up.component.html","webpack:///src/app/shared/enum/chat-messages-status.ts","webpack:///src/app/shared/helpers/auth.guard.ts","webpack:///src/app/shared/helpers/token.interceptor.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/chat-message.service.ts","webpack:///src/app/shared/services/chat-profile.service.ts","webpack:///src/app/shared/services/friend-chat.service.ts","webpack:///src/app/shared/services/friend-request.service.ts","webpack:///src/app/shared/services/user.service.ts","webpack:///src/app/shared/services/ws-messages.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","ChatMessageComponent","authService","message","afterRenderMessage","currentUserId","currentUserValue","emit","DashboardComponent","router","chatMessageService","wsMessagesService","userService","friendRequestService","chatProfileService","friendChatService","isNewMessage","clickFriendComponent","currentUser","currentUserChatProfile","receivedFriendRequests","sentFriendRequests","currentRecipientUser","notificationMessage","isActiveFriendComponent","isActiveFriendRequestComponent","isActiveAddFriendComponent","isActiveSettingsComponent","showDeleteFriendPrompt","isNotificationVisible","friendsChats","messageList","currentFriendChat","scrollDivMessagePosition","shouldScrollToBottomAfterSendMessage","audio","Audio","connect","getToken","initAudioNotification","getUserFriendsChats","getUserInformation","getUserChatProfile","getFriendsChats","pipe","subscribe","result","getPreviousMessages","chatWith","Date","time","toISOString","forEach","unshift","logout","navigate","friendChatId","filter","value","getInitialMessages","getUser","recipient","userId","next","friendChatWithId","getLastMessages","lastChatMessages","sort","m1","m2","localeCompare","messageContent","inputMessage","nativeElement","substr","length","slice","friendChat","sender","content","status","received","push","sendMessage","messageContainer","scrollTop","scrollHeight","that","ws","chatMessage","JSON","parse","body","markMessageAsDelivered","delivered","play","_","error","getReceivedFriendRequests","getSentFriendRequests","user","getChatProfile","userChatProfile","invitationCode","friendCode","replace","postCreateNewFriendRequest","showNotificationMessage","errorObject","detail","src","load","setTimeout","resultMessage","showAddFriendComponent","showFriendRequestComponent","event","target","deleteFriend","showSettingsComponent","DashboardModule","FriendChatComponent","messageService","lastMessage","recipientUser","getLastMessage","newMessage","onClickComponent","getRecipientUserInformation","response","NewFriendRequestComponent","friendRequest","friendsRequestHasDeleted","cancelSentFriendRequest","cancelFriendRequest","ReceivedFriendRequestComponent","friendService","senderUser","friendsRequestReply","replyToFriendsRequest","acceptFriendsRequest","rejectFriendsRequest","AccountComponent","accountService","firstNameValidationError","lastNameValidationError","chatProfile","onChangeAccountInformationRequest","generateNewFriendsCode","modifyUserInformation","firstName","lastName","violationsErrors","violations","field","saveAccountsChanges","ChangePasswordComponent","onChangePasswordRequest","initLoginForm","changePasswordForm","valid","newPassword","confirmNewPassword","reset","setErrors","changePassword","currentPassword","setValue","messageDetailsError","required","get","saveNewPassword","SettingsComponent","displayAccountSettings","displayPasswordSettings","onSettingsOperation","$event","accountSettings","HomeComponent","HomeModule","NotFoundComponent","SignInComponent","activatedRoute","showLoginSpinner","queryParams","param","data","activateAccount","registration","activation","loginForm","login","password","errorResponse","stringify","details","activationKey","activateUser","loginProcess","SignUpComponent","showLoadingSpinner","initRegistrationForm","registrationForm","username","email","confirmPassword","resetNotificationError","isConfirmPasswordAreTheSameAsPassword","setViolationsError","register","control","getError","processRegistration","ChatMessagesStatus","AuthGuard","authenticationService","route","state","returnUrl","url","providedIn","TokenInterceptor","request","token","clone","setHeaders","Authorization","handle","AuthService","http","currentUserSubject","localStorage","getItem","asObservable","credentialLogin","credentialPassword","helper","post","baseApiUrl","authServiceResource","accessToken","access_token","decodedToken","decodeToken","sub","setItem","console","log","removeItem","disconnect","ChatMessageService","chatMessageResource","size","params","set","chatMessagesServiceResource","toString","from","patch","ChatProfileService","chatProfileResource","chatServiceResource","FriendChatService","friendChatResource","chatFriendId","chatFriendWithId","FriendRequestService","friendRequestResource","accept","UserService","userResource","WsMessagesService","messagingWebsocketServiceResource","afterWebSocketConnected","websocketBaseUrl","websocketMessageServiceResource","frame","wsAfterConnected","send","close","SharedModule","environment","production","baseUrl","wsBaseUrl","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {HomeComponent} from './modules/home/home.component';\nimport {NotFoundComponent} from './shared/components/not-found/not-found.component';\nimport {SignUpComponent} from './shared/components/sign-up/sign-up.component';\nimport {DashboardComponent} from './modules/dashboard/dashboard.component';\nimport {AuthGuard} from './shared/helpers/auth.guard';\nimport {SignInComponent} from './shared/components/sign-in/sign-in.component';\n\nconst routes: Routes = [\n\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'login',\n    component: SignInComponent\n  },\n  {\n    path: 'register',\n    component: SignUpComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    component: HomeComponent\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {SharedModule} from './shared/shared.module';\nimport {HomeModule} from './modules/home/home.module';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DashboardModule} from './modules/dashboard/dashboard.module';\nimport {TokenInterceptor} from './shared/helpers/token.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    HomeModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DashboardModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ChatMessage} from '../../../shared/models/chat-message';\nimport {AuthService} from '../../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-chat-message',\n  templateUrl: './chat-message.component.html',\n  styleUrls: ['./chat-message.component.css']\n})\nexport class ChatMessageComponent implements OnInit, AfterViewInit {\n\n  currentUserId: string;\n\n  @Input('message')\n  message: ChatMessage = null;\n\n  @Output()\n  afterRenderMessage: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private authService: AuthService) {\n    this.currentUserId = authService.currentUserValue.id;\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.afterRenderMessage.emit();\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-12\" *ngIf=\"message.sender !== currentUserId\">\n    <div class=\"row\">\n      <div class=\"col-sm-8 incoming-message-container\">\n        <div class=\"row\">\n          <div class=\"col-2 incoming-message-avatar\">\n            <img src=\"/assets/img/user_avatar.svg\" alt=\"\">\n          </div>\n          <div class=\"col-10 incoming-message-content\">\n            <div class=\"incoming-message-text\">\n              <p class=\"shadow p-3 mb-5 rounded\" style=\"overflow-wrap: break-word;\">\n                {{message.content}}\n              </p>\n            </div>\n            <div class=\" incoming-message-date\">\n              <span>{{message.time | date: 'medium' }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-4\"></div>\n    </div>\n  </div>\n  <div class=\"col-sm-12\" *ngIf=\"message.sender === currentUserId\">\n    <div class=\"row\">\n      <div class=\"col-sm-4\"></div>\n      <div class=\"col-sm-8 outgoing-message-container\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"outgoing-message-text\">\n              <p class=\"shadow p-3 mb-5 rounded\" style=\"overflow-wrap: break-word;\">\n                {{message.content}}\n              </p>\n            </div>\n            <div class=\" outgoing-message-date\">\n              <span>{{message.time | date: 'medium'}}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {AuthService} from '../../shared/services/auth.service';\nimport {Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport {ChatMessageService} from '../../shared/services/chat-message.service';\nimport {ChatMessage} from '../../shared/models/chat-message';\nimport {WsMessagesService} from '../../shared/services/ws-messages.service';\nimport {AfterWebSocketConnected} from '../../shared/helpers/after-web-socket-connected';\nimport {UserService} from '../../shared/services/user.service';\nimport {User} from '../../shared/models/user';\nimport {FriendRequestService} from '../../shared/services/friend-request.service';\nimport {FriendRequest} from '../../shared/models/friend-request';\nimport {Subject} from 'rxjs';\nimport {ChatProfile} from '../../shared/models/chat-profile';\nimport {FriendChatService} from '../../shared/services/friend-chat.service';\nimport {FriendChat} from '../../shared/models/friend-chat';\nimport {ChatProfileService} from '../../shared/services/chat-profile.service';\nimport {ChatMessagesStatus} from '../../shared/enum/chat-messages-status';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, AfterWebSocketConnected {\n\n  @ViewChild('inputMessage') inputMessage: ElementRef;\n  @ViewChild('friendCode') friendCode: ElementRef;\n  @ViewChild('notification') notification: ElementRef;\n  @ViewChild('messageContainer') messageContainer: ElementRef;\n  @ViewChild('appMessage') appMessage: ElementRef;\n\n  isNewMessage: Subject<ChatMessage> = new Subject();\n  clickFriendComponent: Subject<number> = new Subject();\n  currentUser = {} as User;\n  currentUserChatProfile = {} as ChatProfile;\n  receivedFriendRequests: FriendRequest[] = [];\n  sentFriendRequests: FriendRequest[] = [];\n  currentRecipientUser = {} as User;\n  notificationMessage = '';\n  isActiveFriendComponent = true;\n  isActiveFriendRequestComponent = false;\n  isActiveAddFriendComponent = false;\n  isActiveSettingsComponent = false;\n  showDeleteFriendPrompt = false;\n  isNotificationVisible = false;\n  friendsChats: FriendChat[] = [];\n  messageList: ChatMessage[] = [];\n  currentFriendChat: FriendChat = null;\n  scrollDivMessagePosition: number = null;\n  private shouldScrollToBottomAfterSendMessage = false;\n  private audio = new Audio();\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private chatMessageService: ChatMessageService,\n              private wsMessagesService: WsMessagesService,\n              private userService: UserService,\n              private friendRequestService: FriendRequestService,\n              private chatProfileService: ChatProfileService,\n              private friendChatService: FriendChatService) {\n    wsMessagesService.connect(authService.getToken(), this);\n    this.initAudioNotification();\n  }\n\n  ngOnInit(): void {\n    this.getUserFriendsChats();\n    this.getUserInformation();\n    this.getUserChatProfile();\n  }\n\n  private getUserFriendsChats() {\n    this.friendChatService.getFriendsChats().pipe(first())\n      .subscribe(result => {\n        this.friendsChats = result;\n      });\n  }\n\n  getPreviousMessages() {\n    this.chatMessageService.getPreviousMessages(10, this.currentFriendChat.id, this.currentFriendChat.chatWith,\n      new Date(this.messageList[0].time).toISOString())\n      .subscribe(result => {\n        result.forEach(message => {\n          //unshift: add to begining\n          this.messageList.unshift(message);\n        });\n      });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/']);\n  }\n\n  enterFriendChat(friendChatId: number) {\n    this.currentFriendChat = this.friendsChats.filter(value => value.id === friendChatId)[0];\n    this.getInitialMessages(this.currentFriendChat.id, this.currentFriendChat.chatWith);\n    this.userService.getUser(this.currentFriendChat.recipient.userId)\n      .subscribe(recipient => {\n        this.currentRecipientUser = recipient;\n      });\n    this.clickFriendComponent.next(friendChatId);\n  }\n\n\n  getInitialMessages(friendChatId: number, friendChatWithId: number) {\n    this.chatMessageService.getLastMessages(10, friendChatId, friendChatWithId).pipe(first())\n      .subscribe(lastChatMessages => {\n        lastChatMessages.sort((m1, m2) => m1.time.localeCompare(m2.time));\n        this.messageList = lastChatMessages;\n      });\n  }\n\n  sentMessage() {\n    let messageContent = this.inputMessage.nativeElement.value;\n    // delete EOL\n    if (messageContent.substr(messageContent.length - 1) === '\\n') {\n      messageContent = messageContent.slice(0, -1);\n    }\n    if (messageContent !== '' || 0 !== messageContent.length) {\n      const message = {\n        friendChat: this.currentFriendChat.id,\n        sender: this.authService.currentUserValue.id,\n        recipient: this.currentFriendChat.recipient.userId,\n        content: messageContent,\n        status: ChatMessagesStatus.received,\n        time: new Date().toISOString()\n      } as ChatMessage;\n      this.messageList.push(message);\n      this.wsMessagesService.sendMessage(message);\n      this.inputMessage.nativeElement.value = '';\n\n      this.isNewMessage.next(message);\n      this.shouldScrollToBottomAfterSendMessage = true;\n    } else {\n      this.inputMessage.nativeElement.value = '';\n    }\n\n  }\n\n  scrollChatMessage() {\n    // scroll to bottom after send chat-message\n    if (this.shouldScrollToBottomAfterSendMessage) {\n      this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight;\n      this.shouldScrollToBottomAfterSendMessage = false;\n      return;\n    }\n\n    if (this.scrollDivMessagePosition !== null && this.scrollDivMessagePosition < this.messageContainer.nativeElement.scrollHeight) {\n      this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight - this.scrollDivMessagePosition;\n    } else {\n      this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight;\n    }\n  }\n\n  //websock protocol\n  wsAfterConnected() {\n    const that = this;\n    this.wsMessagesService.ws.subscribe('/topic/' + this.authService.currentUserValue.id + '.messages',\n      message => {\n        let chatMessage: ChatMessage;\n        chatMessage = JSON.parse(message.body);\n        if (that.currentFriendChat !== null && chatMessage.friendChat === that.currentFriendChat.chatWith) {\n          that.chatMessageService.markMessageAsDelivered(that.currentFriendChat.chatWith).subscribe(result => {\n            chatMessage.status = ChatMessagesStatus.delivered;\n            that.messageList.push(chatMessage);\n          });\n        } else {\n          that.audio.play()\n            .then(_ => {\n              // sound effect started\n            }).catch(error => {\n            // empty\n          });\n        }\n        that.isNewMessage.next(chatMessage);\n      });\n  }\n\n  showFriendRequestComponent() {\n    this.friendRequestService.getReceivedFriendRequests()\n      .subscribe(result => {\n        this.receivedFriendRequests = result;\n        this.isActiveFriendRequestComponent = true;\n        this.isActiveFriendComponent = false;\n        this.isActiveAddFriendComponent = false;\n        this.isActiveSettingsComponent = false;\n      });\n  }\n\n  showFriendComponent() {\n    this.isActiveFriendComponent = true;\n    this.isActiveFriendRequestComponent = false;\n    this.isActiveAddFriendComponent = false;\n    this.isActiveSettingsComponent = false;\n    this.getUserFriendsChats();\n    this.getUserInformation();\n    this.getUserChatProfile();\n  }\n\n  showAddFriendComponent() {\n    this.friendRequestService.getSentFriendRequests()\n      .subscribe(result => {\n        this.sentFriendRequests = result;\n        this.isActiveAddFriendComponent = true;\n        this.isActiveFriendRequestComponent = false;\n        this.isActiveFriendComponent = false;\n        this.isActiveSettingsComponent = false;\n      });\n  }\n\n  showSettingsComponent() {\n    this.isActiveFriendComponent = false;\n    this.isActiveFriendRequestComponent = false;\n    this.isActiveAddFriendComponent = false;\n    this.isActiveSettingsComponent = true;\n    this.currentFriendChat = null;\n  }\n\n  private getUserInformation() {\n    this.userService.getUser(this.authService.currentUserValue.id).subscribe(user => {\n      this.currentUser = user;\n    });\n  }\n\n  private getUserChatProfile() {\n    this.chatProfileService.getChatProfile(this.authService.currentUserValue.id)\n      .subscribe(userChatProfile => {\n        this.currentUserChatProfile = userChatProfile;\n      });\n  }\n\n  sendFriendRequest() {\n    let invitationCode = this.friendCode.nativeElement.value;\n    invitationCode = invitationCode.replace(/\\s/g, '');\n    if (invitationCode.length !== 0) {\n      this.friendRequestService.postCreateNewFriendRequest(invitationCode)\n        .subscribe(result => {\n          this.sentFriendRequests.push(result);\n          this.showNotificationMessage('We send a new friends request.');\n        }, errorObject => {\n          if (errorObject.status === 404 || errorObject.status === 400 || errorObject.status === 409) {\n            this.showNotificationMessage(errorObject.error.detail);\n          }\n        });\n      this.friendCode.nativeElement.value = '';\n    }\n  }\n\n  initAudioNotification() {\n    this.audio.src = '../../../assets/audio/notification_sound.mp3';\n    this.audio.load();\n  }\n\n  showNotificationMessage(message) {\n    this.notificationMessage = message;\n    this.isNotificationVisible = true;\n    setTimeout(() => {\n      this.isNotificationVisible = false;\n    }, 2500);\n  }\n\n  onDeletedFriendsRequest(resultMessage: string) {\n    this.showNotificationMessage(resultMessage);\n    this.showAddFriendComponent();\n  }\n\n  onReplyFriendsRequest(resultMessage: string) {\n    this.showNotificationMessage(resultMessage);\n    this.showFriendRequestComponent();\n  }\n\n  onScrollMessages(event: Event) {\n    // @ts-ignore\n    if (event.target.scrollTop === 0) {\n      // @ts-ignore\n      this.scrollDivMessagePosition = event.target.scrollHeight;\n      this.getPreviousMessages();\n    }\n  }\n\n  deleteFriendAlert() {\n    this.showDeleteFriendPrompt = true;\n  }\n\n  deleteFriend() {\n    this.friendChatService.deleteFriend(this.currentFriendChat.id, this.currentFriendChat.chatWith)\n      .subscribe(result => {\n        this.getUserFriendsChats();\n        this.showDeleteFriendPrompt = false;\n        this.currentFriendChat = null;\n        this.showNotificationMessage('Friend has been removed.');\n      });\n  }\n\n  cancelDeleteFriend() {\n    this.showDeleteFriendPrompt = false;\n  }\n\n\n}\n","<div role=\"alert\" [ngClass]=\"isNotificationVisible ? 'notification':'notification-hide'\" #notification>\n  <span>{{notificationMessage}}</span>\n</div>\n<div class=\"row text-center shadow-lg p-3 mb-5 bg-white rounded remove-friend-alert\" *ngIf=\"showDeleteFriendPrompt\">\n  <div class=\"col-12\">\n    <span style=\"font-size: 20px\">Are you sure you want to delete this friend?</span>\n  </div>\n  <div class=\"col-12 mt-4\">\n    <button type=\"button\" class=\"btn btn-primary text-left\" (click)=\"deleteFriend()\">Yes, Im sure!</button>\n  </div>\n  <div class=\"col-12 mt-4\">\n    <button type=\"button\" class=\"btn btn-danger text-right\" (click)=\"cancelDeleteFriend()\">Cancel</button>\n  </div>\n  <div class=\"col-12\">\n    <span style=\"font-size: 12px; color: #eb453a\">We also remove all your messages with this user.</span>\n  </div>\n</div>\n<div class=\"container fill\" [ngClass]=\"showDeleteFriendPrompt ? 'blur-container':''\">\n  <div class=\"row fill shadow-lg p-3 mb-5 bg-white rounded\">\n    <div class=\"col-sm-4 chat-box-left\">\n      <div class=\"row chat-box-left-header\">\n        <div class=\"col-sm-12 h-100\">\n          <div class=\"row h-100\">\n            <div class=\"col-12 h-100\">\n              <div *ngIf=\"isActiveFriendComponent\">\n                <span class=\"left-header-text-user\">Hello {{currentUser.firstName + ' ' + currentUser.lastName}}</span>\n                <span\n                  class=\"left-header-text-friends-code\">Friends code: {{currentUserChatProfile.friendsRequestCode}}\n                </span>\n              </div>\n              <div class=\"h-100\"\n                   *ngIf=\"isActiveFriendRequestComponent || isActiveAddFriendComponent || isActiveSettingsComponent\">\n                <div class=\"row h-100\">\n                  <div class=\"col-4 m-auto\">\n                    <input class=\"back-button\" type=\"image\" src=\"/assets/img/back.svg\" (click)=\"showFriendComponent()\"/>\n                  </div>\n                  <div class=\"col-8 text-right m-auto\">\n                    <span class=\"left-header-friend-request-text\"\n                          *ngIf=\"isActiveFriendRequestComponent\">Friends request</span>\n                    <span class=\"left-header-friend-request-text\"\n                          *ngIf=\"isActiveAddFriendComponent\">Invite new friend</span>\n                    <span class=\"left-header-friend-request-text\"\n                          *ngIf=\"isActiveSettingsComponent\">Settings</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row chat-box-left-list\">\n        <div class=\"col-sm-12 friends-list-box h-100\" style=\"overflow-y: auto;\">\n          <!-- Friend component-->\n          <div *ngIf=\"isActiveFriendComponent && friendsChats.length !== 0\">\n            <div *ngFor=\"let friendChat of friendsChats\">\n              <app-friend-chat [conversation]=\"friendChat\"\n                               [isNewMessage]=\"isNewMessage\"\n                               [onClickComponent]=\"clickFriendComponent\"\n                               (click)=\"enterFriendChat(friendChat.id)\"></app-friend-chat>\n            </div>\n          </div>\n          <div class=\"text-center\" style=\"margin-top: 40%;\"\n               *ngIf=\"isActiveFriendComponent && friendsChats.length === 0\">\n            <img src=\"/assets/img/friend_theme.svg\" style=\"max-width: 75%\">\n            <br><br>\n            <span style=\"font-size: 20px\"><b>You don't have any friends</b></span>\n          </div>\n          <!-- -->\n          <!-- Friend request component-->\n          <div *ngIf=\"isActiveFriendRequestComponent && receivedFriendRequests.length !== 0\">\n            <div *ngFor=\"let friendsRequest of receivedFriendRequests\">\n              <app-received-friend-request [friendRequest]=\"friendsRequest\"\n                                           (friendsRequestReply)=\"onReplyFriendsRequest($event)\"></app-received-friend-request>\n            </div>\n          </div>\n          <div class=\"text-center\" style=\"margin-top: 40%;\"\n               *ngIf=\"isActiveFriendRequestComponent && receivedFriendRequests.length === 0\">\n            <img src=\"/assets/img/sad_blue.svg\" style=\"max-width: 75%\">\n            <br><br>\n            <span style=\"font-size: 20px\"><b>No new requests</b></span>\n            <br>\n            <span>When people send you friend requests, they'll appear here.</span>\n          </div>\n          <!-- -->\n          <!-- Add friend-chat component-->\n          <div *ngIf=\"isActiveAddFriendComponent\">\n            <div class=\"row\">\n              <div class=\"input-group mb-3\" style=\"padding: 5px\">\n                <input type=\"text\" class=\"form-control input-friend-code\" placeholder=\"Friend code\"\n                       aria-label=\"Friend code\" aria-describedby=\"basic-addon2\" #friendCode>\n                <div class=\"input-group-append\">\n                  <input type=\"image\" class=\"btn btn-outline-primary border send-friend-request-button\"\n                         (click)=\"sendFriendRequest()\"\n                         src=\"/assets/img/letter.svg\" width=\"60\">\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"isActiveAddFriendComponent && sentFriendRequests.length !==0\">\n              <div *ngFor=\"let friendRequest of sentFriendRequests\">\n                <app-new-friend-request [friendRequest]=\"friendRequest\"\n                                        (friendsRequestHasDeleted)=\"onDeletedFriendsRequest($event)\"></app-new-friend-request>\n              </div>\n            </div>\n            <div class=\"text-center\" style=\"margin-top: 40%;\"\n                 *ngIf=\"isActiveAddFriendComponent && sentFriendRequests.length === 0\">\n              <img src=\"/assets/img/empty_add_friend.svg\" style=\"max-width: 75%\">\n              <br><br>\n              <span style=\"font-size: 20px\"><b>No sent friends request</b></span>\n            </div>\n          </div>\n          <!-- -->\n          <!-- Settings component -->\n          <div class=\"text-center\" style=\"margin-top: 40%;\"\n               *ngIf=\"isActiveSettingsComponent\">\n            <img src=\"/assets/img/settings.svg\" style=\"max-width: 75%\">\n            <br><br>\n            <span style=\"font-size: 20px\"><b>Personal settings</b></span>\n          </div>\n          <!-- -->\n        </div>\n      </div>\n      <div class=\"row chat-box-buttons\">\n        <div class=\"col-sm-12\">\n          <div class=\"row h-100 mr-0\">\n            <div class=\"col-3 text-center w-50 m-auto\">\n              <input class=\"left-buttons-menu-ico nav-button\" type=\"image\" src=\"/assets/img/add_friend.svg\"\n                     (click)=\"showAddFriendComponent()\"/>\n            </div>\n            <div class=\"col-3 text-center w-50 m-auto\">\n              <input class=\"left-buttons-menu-ico nav-button\" type=\"image\" src=\"/assets/img/new_friends_request.svg\"\n                     (click)=\"showFriendRequestComponent()\"/>\n            </div>\n            <div class=\"col-3 text-center w-50 m-auto\">\n              <input class=\"left-buttons-menu-ico nav-button\" type=\"image\" src=\"/assets/img/setting_ico.svg\"\n                     (click)=\"showSettingsComponent()\"/>\n            </div>\n            <div class=\"col-3 text-center w-50 m-auto\">\n              <input class=\"left-buttons-menu-ico nav-button\" type=\"image\" src=\"/assets/img/logout.svg\"\n                     (click)=\"logout()\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8 chat-box-right\">\n      <ng-container\n        *ngIf=\"!isActiveSettingsComponent; then chat; else settings\">\n      </ng-container>\n      <ng-template #chat>\n        <div style=\"height: 7%;\">\n          <div class=\"row chat-current-person-container\" *ngIf=\"currentFriendChat!==null\">\n            <div class=\"col-2 m-auto text-right\">\n              <img src=\"/assets/img/user_avatar.svg\" alt=\"\">\n            </div>\n            <div class=\"col-8 m-auto text-left\">\n              <span class=\"chat-current-person-text\">\n                {{currentRecipientUser.firstName + ' ' + currentRecipientUser.lastName}}\n              </span>\n            </div>\n            <div class=\"col-2 m-auto text-right\">\n              <div class=\"btn-group dropleft\">\n                <input class=\"dropdown-toggle nav-button\" id=\"dropdownMenuButton\" type=\"image\"\n                       src=\"/assets/img/more.svg\"\n                       alt=\"\"\n                       style=\"max-width: 35px\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                  <button class=\"dropdown-item\" (click)=\"deleteFriendAlert()\">Remove</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\" style=\"height: 73%\">\n          <div class=\"col-sm-12 messages-container\" #messageContainer (scroll)=\"onScrollMessages($event)\">\n            <div class=\"row h-100\" *ngIf=\"currentFriendChat === null\">\n              <div class=\"col-12 text-center m-auto w-50\">\n                <img src=\"/assets/img/begin_chat.svg\" alt=\"\" style=\"max-width: 50%;\">\n                <br>\n                <br>\n                <span>Choice your friend and start chatting.</span>\n              </div>\n            </div>\n            <div class=\"h-100\" *ngIf=\"currentFriendChat !== null\">\n              <div class=\"h-100\" *ngIf=\"messageList.length === 0\">\n                <div class=\"row h-100\">\n                  <div class=\"col-12 text-center m-auto w-50\">\n                    <img src=\"/assets/img/no_message.svg\" alt=\"\" style=\"max-width: 50%;\">\n                    <br>\n                    <span>Not found any message</span>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"messageList.length !== 0\">\n                <div *ngFor=\"let message of messageList\">\n                  <app-chat-message [message]=\"message\" (afterRenderMessage)=\"scrollChatMessage()\"\n                                    #appMessage></app-chat-message>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\" style=\"height: 20%\">\n          <div class=\"col-sm-12 h-100\" *ngIf=\"currentFriendChat !== null\">\n            <div class=\"row h-100 m-0\" style=\"padding: 10px;\">\n              <div class=\"input-group mb-3\">\n              <textarea class=\"form-control input-message h-100 send-message-textarea\"\n                        placeholder=\"Type a message\"\n                        aria-label=\"Type a message\" aria-describedby=\"basic-addon2\" #inputMessage\n                        (keyup.enter)=\"sentMessage()\"></textarea>\n                <div class=\"input-group-append\">\n                  <input type=\"image\" class=\"btn btn-outline-primary send-button\" src=\"/assets/img/send.svg\" width=\"50\"\n                         (click)=\"sentMessage()\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n\n      <ng-template #settings>\n        <div class=\"row h-100\">\n          <div class=\"col-sm-12 messages-container\">\n            <div class=\"h-100\">\n              <app-settings (onSettingsOperation)=\"showNotificationMessage($event)\"></app-settings>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashboardComponent} from './dashboard.component';\nimport {ChatMessageComponent} from './chat-message/chat-message.component';\nimport {FriendChatComponent} from './friend-chat/friend-chat.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {ReceivedFriendRequestComponent} from './received-friend-request/received-friend-request.component';\nimport {SettingsComponent} from './settings/settings.component';\nimport {AccountComponent} from './settings/account/account.component';\nimport {ChangePasswordComponent} from './settings/change-password/change-password.component';\nimport {NewFriendRequestComponent} from './new-friend-request/new-friend-request.component';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    ChatMessageComponent,\n    FriendChatComponent,\n    ReceivedFriendRequestComponent,\n    NewFriendRequestComponent,\n    SettingsComponent,\n    AccountComponent,\n    ChangePasswordComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule\n  ]\n})\nexport class DashboardModule {\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ChatMessage} from '../../../shared/models/chat-message';\nimport {ChatMessageService} from '../../../shared/services/chat-message.service';\nimport {first} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {AuthService} from '../../../shared/services/auth.service';\nimport {FriendChat} from '../../../shared/models/friend-chat';\nimport {UserService} from '../../../shared/services/user.service';\nimport {User} from '../../../shared/models/user';\nimport {ChatMessagesStatus} from '../../../shared/enum/chat-messages-status';\n\n@Component({\n  selector: 'app-friend-chat',\n  templateUrl: './friend-chat.component.html',\n  styleUrls: ['./friend-chat.component.css']\n})\nexport class FriendChatComponent implements OnInit {\n\n  @Input('isNewMessage') isNewMessage: Subject<ChatMessage>;\n  @Input('onClickComponent') onClickComponent: Subject<number>;\n  @Input('conversation') friendChat: FriendChat;\n  currentFriendChat: number;\n  lastMessage = {} as ChatMessage;\n  recipientUser = {} as User;\n\n  constructor(private messageService: ChatMessageService,\n              private authService: AuthService,\n              private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.getLastMessage();\n    this.isNewMessage.subscribe(newMessage => {\n      if (this.friendChat.id === newMessage.friendChat || this.friendChat.chatWith === newMessage.friendChat) {\n        this.lastMessage = newMessage;\n      }\n    });\n    this.onClickComponent.subscribe(friendChatId => {\n      this.currentFriendChat = friendChatId;\n      this.markMessageAsDelivered();\n    });\n    this.getRecipientUserInformation();\n  }\n\n  private getRecipientUserInformation() {\n    this.userService.getUser(this.friendChat.recipient.userId)\n      .subscribe(recipient => {\n        this.recipientUser = recipient;\n      });\n  }\n\n  showNotification(): boolean {\n    if (this.currentFriendChat === this.friendChat.id) {\n      return false;\n    } else {\n      return this.lastMessage.status === ChatMessagesStatus.received && this.lastMessage.recipient === this.authService.currentUserValue.id;\n    }\n  }\n\n  getLastMessage() {\n    this.messageService.getLastMessages(1, this.friendChat.id, this.friendChat.chatWith).pipe(first())\n      .subscribe(result => {\n        if (result.length !== 0) {\n          this.lastMessage = result[0];\n        }\n      });\n  }\n\n  markMessageAsDelivered() {\n    if (this.friendChat.id === this.currentFriendChat) {\n      this.messageService.markMessageAsDelivered(this.friendChat.chatWith).subscribe(response => {\n        this.getLastMessage();\n      });\n    }\n  }\n\n\n}\n","<div class=\"row chat\"\n     [ngClass]=\"{'active-chat' :  friendChat.id === currentFriendChat, 'inactive-chat' : friendChat.id !== currentFriendChat}\">\n  <div *ngIf=\"showNotification()\" class=\"chat-notification\"></div>\n  <div class=\"col-2 text-center\" style=\"position: relative; left: 5px;\">\n    <img src=\"/assets/img/user_avatar.svg\" alt=\"\" class=\"friend-ico\">\n  </div>\n  <div class=\"col-7\">\n    <div class=\"row\">\n      <div class=\"col-12\" style=\"font-size: 22px\">\n        {{recipientUser.firstName + ' ' + recipientUser.lastName}}\n      </div>\n      <div class=\"col-12\">\n        <span *ngIf=\"lastMessage.content; else noMessage\" class=\"last-message\">\n          {{lastMessage.content}}\n        </span>\n      </div>\n      <ng-template #noMessage>\n        <span class=\"last-message\"><i>No messages.</i></span>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"col-lg-3 text-right\" style=\"font-size: 13px;\">\n    {{lastMessage.time | date: 'mediumDate'}}\n  </div>\n</div>\n\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FriendRequestService} from '../../../shared/services/friend-request.service';\nimport {FriendRequest} from '../../../shared/models/friend-request';\nimport {UserService} from '../../../shared/services/user.service';\nimport {User} from '../../../shared/models/user';\n\n@Component({\n  selector: 'app-new-friend-request',\n  templateUrl: './new-friend-request.component.html',\n  styleUrls: ['./new-friend-request.component.css']\n})\nexport class NewFriendRequestComponent implements OnInit {\n\n  recipientUser = {} as User;\n\n  @Input('friendRequest')\n  friendRequest: FriendRequest = null;\n\n  @Output()\n  friendsRequestHasDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private friendRequestService: FriendRequestService,\n              private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.friendRequest.recipient.userId)\n      .subscribe(recipient => {\n        this.recipientUser = recipient;\n      });\n  }\n\n  cancelFriendRequest() {\n    this.friendRequestService.cancelSentFriendRequest(this.friendRequest.id)\n      .subscribe(result => {\n        this.friendsRequestHasDeleted.emit('Friend request deleted.');\n      });\n  }\n\n}\n","<div class=\"row text-left row-container\">\n  <div class=\"col-8\">\n    <span>You sent friends request to</span>\n    <br>\n    <span><b>{{recipientUser.firstName + ' ' + recipientUser.lastName}}</b></span>\n  </div>\n  <div class=\"col-4 text-left\">\n    <input class=\"reject-ico\" type=\"image\" src=\"/assets/img/reject.svg\" (click)=\"cancelFriendRequest()\"/>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FriendRequest} from '../../../shared/models/friend-request';\nimport {FriendRequestService} from '../../../shared/services/friend-request.service';\nimport {UserService} from '../../../shared/services/user.service';\nimport {User} from '../../../shared/models/user';\n\n@Component({\n  selector: 'app-received-friend-request',\n  templateUrl: './received-friend-request.component.html',\n  styleUrls: ['./received-friend-request.component.css']\n})\nexport class ReceivedFriendRequestComponent implements OnInit {\n\n  senderUser = {} as User;\n\n  @Input('friendRequest')\n  friendRequest: FriendRequest;\n\n  @Output()\n  friendsRequestReply: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private friendService: FriendRequestService,\n              private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.friendRequest.sender.userId)\n      .subscribe(sender => {\n        this.senderUser = sender;\n      });\n  }\n\n  acceptFriendsRequest() {\n    this.friendService.replyToFriendsRequest(this.friendRequest.id, true)\n      .subscribe(result => {\n        this.friendsRequestReply.emit('Friends request has been accepted');\n      });\n  }\n\n  rejectFriendsRequest() {\n    this.friendService.replyToFriendsRequest(this.friendRequest.id, false)\n      .subscribe(result => {\n        this.friendsRequestReply.emit('Friends request has been rejected');\n      });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-12\" style=\"border-bottom: 1px solid #c4c4c4;\">\n    <div class=\"row\" style=\"padding: 5px\">\n      <div class=\"col-2 m-auto pl-2\">\n        <img src=\"/assets/img/user_avatar.svg\" alt=\"\" style=\"max-width: 35px\">\n      </div>\n      <div class=\"col-10\">\n        <div class=\"row\">\n          <div class=\"col-12 \" style=\"font-size: 15px\">\n            <b>{{senderUser.firstName + ' ' + senderUser.lastName}}</b> sent you a friend\n            request.\n          </div>\n          <div class=\"col-12 pt-2\" style=\"font-size: 13px\">\n            <div class=\"row\">\n              <div class=\"col-6  text-center\">\n                <input class=\"action-ico\" type=\"image\" src=\"/assets/img/accept.svg\" (click)=\"acceptFriendsRequest()\"/>\n              </div>\n              <div class=\"row-6  text-center\">\n                <input class=\"action-ico\" type=\"image\" src=\"/assets/img/reject.svg\" (click)=\"rejectFriendsRequest()\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, ElementRef, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {User} from '../../../../shared/models/user';\nimport {AuthService} from '../../../../shared/services/auth.service';\nimport {UserService} from '../../../../shared/services/user.service';\nimport {ChatProfile} from '../../../../shared/models/chat-profile';\nimport {ChatProfileService} from '../../../../shared/services/chat-profile.service';\n\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  @ViewChild('firstName') firstName: ElementRef;\n  @ViewChild('lastName') lastName: ElementRef;\n\n  firstNameValidationError: string = null;\n  lastNameValidationError: string = null;\n  user = {} as User;\n  chatProfile = {} as ChatProfile;\n\n  @Output() onChangeAccountInformationRequest: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private authService: AuthService,\n              private accountService: UserService,\n              private chatProfileService: ChatProfileService) {\n  }\n\n  ngOnInit(): void {\n    this.accountService.getUser(this.authService.currentUserValue.id).subscribe(result => {\n      this.user = result;\n    });\n\n    this.chatProfileService.getChatProfile(this.authService.currentUserValue.id)\n      .subscribe(result => {\n        this.chatProfile = result;\n      });\n\n  }\n\n  generateNewFriendsCode() {\n    this.chatProfileService.generateNewFriendsCode(this.authService.currentUserValue.id)\n      .subscribe(result => {\n        this.chatProfile = result;\n      });\n  }\n\n  saveAccountsChanges() {\n\n    this.accountService.modifyUserInformation(this.authService.currentUserValue.id,\n      {\n        firstName: this.firstName.nativeElement.value,\n        lastName: this.lastName.nativeElement.value\n      }).subscribe(result => {\n      this.firstName.nativeElement.value = result.firstName;\n      this.lastName.nativeElement.value = result.lastName;\n      this.firstNameValidationError = null;\n      this.lastNameValidationError = null;\n      this.onChangeAccountInformationRequest.emit('Information successfully updated');\n    }, errorObject => {\n\n      if (errorObject.status === 400) {\n        const violationsErrors = errorObject.error.violations;\n        if (violationsErrors) {\n          violationsErrors.forEach(error => {\n            if (error.field === 'firstName') {\n              this.firstNameValidationError = error.message;\n            }\n            if (error.field === 'lastName') {\n              this.lastNameValidationError = error.message;\n            }\n          });\n        }\n      }\n    });\n  }\n\n\n}\n","<div class=\"tab-pane fade show active\" id=\"accountSettings\" role=\"tabpanel\" aria-labelledby=\"account-tab\">\n  <div class=\"form-group row\">\n    <!--<label for=\"invitation-code\" class=\"col-sm-3 col-form-label\">Invitation code</label>\n    <div class=\"col-sm-5\">\n      <input type=\"text\" readonly class=\"form-control-plaintext no-input-border\" id=\"invitation-code\"\n             value=\"{{chatProfile.friendsRequestCode}}\">\n    </div> -->\n    <!-- <div class=\"col-sm-4\">\n      <p class=\"lead text-center\">\n        <button class=\"btn btn-primary\" (click)=\"generateNewFriendsCode()\">Renew code</button>\n      </p>\n    </div> -->\n  </div>\n  <div class=\"form-group row\">\n    <label for=\"staticLogin\" class=\"col-sm-3 col-form-label\">Login</label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" readonly class=\"form-control-plaintext no-input-border\" id=\"staticLogin\"\n             value=\"{{user.username}}\">\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <label for=\"staticEmail\" class=\"col-sm-3 col-form-label\">Email</label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" readonly class=\"form-control-plaintext no-input-border\" id=\"staticEmail\"\n             value=\"{{user.email}}\">\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <label for=\"firstName\" class=\"col-sm-3 col-form-label\">First name</label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control account-info-input\" id=\"firstName\" placeholder=\"First name\"\n             value=\"{{user.firstName}}\" #firstName/>\n      <small class=\"form-text text-danger\" *ngIf=\"firstNameValidationError\">\n        {{firstNameValidationError}}\n      </small>\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <label for=\"lastName\" class=\"col-sm-3 col-form-label\">Last name</label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control account-info-input\" id=\"lastName\" placeholder=\"Last name\"\n             value=\"{{user.lastName}}\" #lastName/>\n      <small class=\"form-text text-danger\" *ngIf=\"lastNameValidationError\">\n        {{lastNameValidationError}}\n      </small>\n    </div>\n  </div>\n  <p class=\"lead text-center\">\n    <a class=\"btn btn-primary\" (click)=\"saveAccountsChanges()\">Save changes</a>\n  </p>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../../shared/services/user.service';\nimport {AuthService} from '../../../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  changePasswordForm: FormGroup;\n\n  @Output() onChangePasswordRequest: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private accountService: UserService,\n              private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n    this.initLoginForm();\n  }\n\n  saveNewPassword() {\n\n    if (this.changePasswordForm.valid) {\n\n      if (this.newPassword.value !== this.confirmNewPassword.value) {\n        this.newPassword.reset();\n        this.confirmNewPassword.setErrors({violations: 'Password not match'});\n        return;\n      }\n\n      this.accountService.changePassword(this.authService.currentUserValue.id,\n        {\n          currentPassword: this.currentPassword.value,\n          newPassword: this.newPassword.value\n        }).subscribe(result => {\n        this.onChangePasswordRequest.emit('Password changed');\n        this.currentPassword.reset();\n        this.confirmNewPassword.reset();\n        this.newPassword.reset();\n      }, errorObject => {\n        if (errorObject.status === 400) {\n          const violationsErrors = errorObject.error.violations;\n          if (violationsErrors) {\n            violationsErrors.forEach(error => {\n              if (error.field === 'newPassword') {\n                this.newPassword.setValue('');\n                this.confirmNewPassword.reset();\n                this.newPassword.setErrors({violations: error.message});\n              }\n            });\n          }\n\n          const messageDetailsError = errorObject.error.detail;\n          if (messageDetailsError) {\n            this.currentPassword.setValue('');\n            this.currentPassword.setErrors({violations: messageDetailsError});\n            this.newPassword.reset();\n            this.confirmNewPassword.reset();\n          }\n\n        }\n\n      });\n    }\n  }\n\n  initLoginForm() {\n    this.changePasswordForm = new FormGroup({\n      currentPassword: new FormControl('', [Validators.required]),\n      newPassword: new FormControl('', [Validators.required]),\n      confirmNewPassword: new FormControl('', [Validators.required])\n    });\n  }\n\n  get currentPassword() {\n    return this.changePasswordForm.get('currentPassword');\n  }\n\n  get newPassword() {\n    return this.changePasswordForm.get('newPassword');\n  }\n\n  get confirmNewPassword() {\n    return this.changePasswordForm.get('confirmNewPassword');\n  }\n\n}\n","<div class=\"tab-pane fade\" id=\"passwordSettings\" role=\"tabpanel\" aria-labelledby=\"change-password-tab\">\n  <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"saveNewPassword()\">\n    <div class=\"form-group\">\n      <label for=\"currentPassword\">Current password</label>\n      <input type=\"password\" class=\"form-control password-input\" id=\"currentPassword\" formControlName=\"currentPassword\"\n             placeholder=\"Current password\">\n      <div *ngIf=\"currentPassword.invalid && (currentPassword.dirty || currentPassword.touched)\">\n        <small id=\"info-current-password\" class=\"form-text text-danger password-input\"\n               *ngIf=\"currentPassword.errors.required\">\n          Pass your current password.\n        </small>\n        <small class=\"form-text text-danger\" *ngIf=\"currentPassword.errors.minlength\">\n          Current password can not be empty.\n        </small>\n        <div *ngIf=\"currentPassword.getError('violations')\">\n          <small class=\"form-text text-danger\" [innerHTML]=\"currentPassword.getError('violations')\">\n          </small>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"newPassword\">New password</label>\n      <input type=\"password\" class=\"form-control password-input\" id=\"newPassword\" formControlName=\"newPassword\"\n             placeholder=\"New password\">\n      <div *ngIf=\"newPassword.invalid && (newPassword.dirty || newPassword.touched)\">\n        <small id=\"info-new-password\" class=\"form-text text-danger\" *ngIf=\"newPassword.errors.required\">\n          Pass your new password.\n        </small>\n        <div *ngIf=\"newPassword.getError('violations')\">\n          <small  class=\"form-text text-danger\" [innerHTML]=\"newPassword.getError('violations')\">\n          </small>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"confirmNewPassword\">Confirm new password</label>\n      <input type=\"password\" class=\"form-control password-input\" id=\"confirmNewPassword\"\n             formControlName=\"confirmNewPassword\"\n             placeholder=\"Confirm new password\">\n      <div *ngIf=\"confirmNewPassword.invalid && (confirmNewPassword.dirty || confirmNewPassword.touched)\">\n        <small id=\"info-confirm-password\" class=\"form-text text-danger\" *ngIf=\"confirmNewPassword.errors.required\">\n          Confirm new password.\n        </small>\n        <div *ngIf=\"confirmNewPassword.getError('violations')\">\n          <small class=\"form-text text-danger\" [innerHTML]=\"confirmNewPassword.getError('violations')\">\n          </small>\n        </div>\n      </div>\n    </div>\n    <p class=\"lead text-center\">\n      <input type=\"submit\" class=\"btn btn-primary\" value=\"Save new password\"/>\n    </p>\n  </form>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  displayAccountSettings = true;\n  displayPasswordSettings = false;\n\n  @Output()\n  onSettingsOperation: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  accountSettings() {\n    this.displayAccountSettings = true;\n    this.displayPasswordSettings = false;\n  }\n\n  passwordSettings() {\n    this.displayAccountSettings = false;\n    this.displayPasswordSettings = true;\n  }\n\n  onChangePasswordRequest($event: string) {\n    this.onSettingsOperation.emit($event);\n  }\n}\n","<div class=\"home-container text-center\">\n  <div class=\"cover-container d-flex h-100 flex-column\">\n    <main role=\"main\" class=\"inner cover\">\n      <ul class=\"nav justify-content-center\" role=\"tablist\" style=\"background-color: #ffffff\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" href=\"#accountSettings\" (click)=\"accountSettings()\" data-toggle=\"tab\" role=\"tab\">Account\n            information</a>\n        </li>\n        <!-- <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#passwordSettings\" (click)=\"passwordSettings()\" data-toggle=\"tab\" role=\"tab\">Change\n            password</a>\n        </li> -->\n      </ul>\n      <div class=\"tab-content text-left\" id=\"myTabContent\" style=\"margin-top: 15%\">\n        <div *ngIf=\"displayAccountSettings\">\n          <app-account (onChangeAccountInformationRequest)=\"onChangePasswordRequest($event)\"></app-account>\n        </div>\n        <div *ngIf=\"displayPasswordSettings\">\n          <app-change-password (onChangePasswordRequest)=\"onChangePasswordRequest($event)\"></app-change-password>\n        </div>\n      </div>\n    </main>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../shared/services/auth.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private router: Router) {\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n","<div class=\"home-container text-center\">\n  <div class=\"cover-container d-flex h-100 p-3 mx-auto flex-column\">\n    <header class=\"masthead mb-auto\">\n      <div class=\"inner\">\n        <nav class=\"nav nav-masthead justify-content-center\">\n        </nav>\n      </div>\n    </header>\n\n    <main role=\"main\" class=\"inner cover\">\n      <h1 class=\"cover-heading\"><b>Scorpio</b></h1>\n      <p class=\"lead secondary-headlight mt-4\">Be close with your</p>\n      <p class=\"lead\">\n        <a href=\"#\" class=\"btn btn-lg btn-secondary mt-5 pl-5 pr-5\" routerLink=\"/login\">Sign in and start chatting!</a>\n      </p>\n    </main>\n\n    <footer class=\"mastfoot mt-auto\">\n\n    </footer>\n  </div>\n</div>\n\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HomeComponent} from './home.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {RouterModule} from '@angular/router';\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  exports: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule\n  ]\n})\nexport class HomeModule {\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex align-items-center justify-content-center flex-column page-container\">\n  <div class=\"page-column\">\n    <img src=\"/assets/img/404.svg\" alt=\"\" class=\"page-img\"/>\n  </div>\n  <div class=\"page-column\">\n    <span class=\"page-text\">Page not found</span>\n  </div>\n  <div class=\"page-column mt-5\">\n    <button type=\"button\" class=\"btn btn-primary btn-lg\" routerLink=\"/home\">Back to home</button>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../services/user.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  notificationMessage = '';\n  loginForm: FormGroup;\n  showLoginSpinner = false;\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private accountService: UserService,\n              private activatedRoute: ActivatedRoute,) {\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.initLoginForm();\n\n    this.activatedRoute.queryParams.subscribe(param => {\n      if (param.data) {\n        this.activateAccount(param.data);\n      }\n      if (param.registration) {\n        this.notificationMessage = 'Please check our mail box and confirm your email address.';\n      }\n      if (param.activation) {\n        this.notificationMessage = 'Email confirmed. You can log in.';\n      }\n    });\n\n  }\n\n  loginProcess() {\n    if (this.loginForm.valid) {\n      this.showLoginSpinner = true;\n      this.authService.login(this.login.value, this.password.value)\n        .subscribe(result => {\n          this.showLoginSpinner = false;\n          this.router.navigate(['/dashboard']);\n        }, errorResponse => {\n          this.showLoginSpinner = false;\n          this.login.reset();\n          this.password.reset();\n          this.notificationMessage = JSON.parse(JSON.stringify(errorResponse)).error.details;\n        });\n    }\n  }\n\n  private initLoginForm() {\n    this.loginForm = new FormGroup({\n      login: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n\n  activateAccount(activationKey) {\n    this.accountService.activateUser(activationKey).subscribe(result => {\n      this.router.navigate(['/login'], {queryParams: {activation: 'success'}});\n    });\n  }\n\n  get login() {\n    return this.loginForm.get('login');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n}\n","<div class=\"d-flex flex-column page-container\">\n  <div class=\"page-column\">\n    <img src=\"/assets/img/login_theme.svg\" alt=\"\" class=\"login-pic\"/>\n  </div>\n  <div class=\"page-column mt-5\">\n    <span class=\"login-main-text\">Sign in</span>\n  </div>\n  <div class=\"page-column mt-3\" *ngIf=\"notificationMessage\">\n    <div class=\"alert alert-primary pl-5 pr-5\" role=\"alert\">\n      <span class=\"notification-text\">{{notificationMessage}}</span>\n    </div>\n  </div>\n  <div class=\"page-column mt-3\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginProcess()\">\n      <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control credential-input has-warning\" id=\"login\" placeholder=\"Login or email\"\n               formControlName=\"login\"/>\n        <small *ngIf=\"login.invalid && (login.dirty || login.touched)\" class=\"form-text text-danger validation-text\">\n          Login is required.\n        </small>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"password\" class=\"form-control credential-input\" id=\"password\" placeholder=\"Password\"\n               formControlName=\"password\"/>\n        <small *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n               class=\"form-text text-danger validation-text\">\n          Password is required.\n        </small>\n      </div>\n      <div style=\"text-align: right\">\n        <span class=\"sign-up-text\">No account yet? <a routerLink=\"/register\">Sign up!</a></span>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary pl-5 pr-5 mt-4\" [disabled]=\"loginForm.invalid\">\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" *ngIf=\"showLoginSpinner\"></span>\n        Login\n      </button>\n    </form>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  showLoadingSpinner = false;\n  notificationMessage = '';\n  registrationForm: FormGroup;\n\n  constructor(private authService: AuthService,\n              private router: Router) {\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.initRegistrationForm();\n  }\n\n  private initRegistrationForm() {\n    this.registrationForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('', [Validators.required]),\n    });\n  }\n\n\n  processRegistration() :void{\n\n    // this.authService.register({\n    //   username: this.username.value,\n    //   password: this.password.value,\n    //   firstName: this.firstName.value,\n    //   lastName: this.lastName.value,\n    //   email: this.email.value\n    // }).subscribe();\n    // console.log(\"hanh\");\n\n    this.resetNotificationError();\n    if (!this.isConfirmPasswordAreTheSameAsPassword()) {\n      this.setViolationsError(this.confirmPassword, 'Passwords not match');\n      return;\n    }\n\n    if (this.registrationForm.valid) {\n      this.showLoadingSpinner = true;\n\n      this.authService.register({\n        username: this.username.value,\n        password: this.password.value,\n        firstName: this.firstName.value,\n        lastName: this.lastName.value,\n        email: this.email.value\n      }).subscribe(result => {\n        this.showLoadingSpinner = false;\n        this.router.navigate(['/login'], {queryParams: {registration: 'success'}});\n      }, errorObject => {\n        this.showLoadingSpinner = false;\n        if (errorObject.status === 400) {\n          const violationsErrors = errorObject.error.violations;\n          violationsErrors.forEach(error => {\n            if (error.field === 'password') {\n              this.password.setValue('');\n              this.confirmPassword.reset();\n              this.setViolationsError(this.password, error.message);\n            }\n            if (error.field === 'email') {\n              this.setViolationsError(this.email, error.message);\n            }\n            if (error.field === 'username') {\n              this.setViolationsError(this.username, error.message);\n            }\n            if (error.field === 'firstName') {\n              this.setViolationsError(this.firstName, error.message);\n            }\n            if (error.field === 'lastName') {\n              this.setViolationsError(this.lastName, error.message);\n            }\n          });\n        }\n        if (errorObject.status === 409) {\n          this.notificationMessage = errorObject.error.detail;\n        }\n      });\n    }\n  }\n\n  setViolationsError(control: AbstractControl, error: string) {\n    if (control.getError('violations')) {\n      control.setErrors({violations: control.getError('violations') + '<br>' + error});\n    } else {\n      control.setErrors({violations: error});\n    }\n  }\n\n  resetNotificationError() {\n    this.notificationMessage = '';\n  }\n\n  isConfirmPasswordAreTheSameAsPassword() {\n    return this.password.value === this.confirmPassword.value;\n  }\n\n  get username() {\n    return this.registrationForm.get('username');\n  }\n\n  get email() {\n    return this.registrationForm.get('email');\n  }\n\n  get firstName() {\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName() {\n    return this.registrationForm.get('lastName');\n  }\n\n  get password() {\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword() {\n    return this.registrationForm.get('confirmPassword');\n  }\n\n}\n","<div class=\"d-flex flex-column page-container\">\n  <div class=\"page-column\">\n    <img src=\"/assets/img/registration_theme.svg\" alt=\"\" class=\"registration-pic\"/>\n  </div>\n  <div class=\"page-column\">\n    <span class=\"registration-main-text\">Sign up</span>\n  </div>\n  <div class=\"page-column mt-2 align-items-center\" *ngIf=\"notificationMessage\">\n    <div class=\"alert alert-primary pl-5 pr-5\" role=\"alert\">\n      <span class=\"notification-text\">{{notificationMessage}}</span>\n    </div>\n  </div>\n  <div class=\"page-column mt-2 pb-5\">\n    <form [formGroup]=\"registrationForm\" (ngSubmit)=\"processRegistration()\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\" style=\"text-align: left\">\n          <label for=\"firstName\">First name</label>\n          <input type=\"text\" class=\"form-control registration-input\" id=\"firstName\" placeholder=\"First name\"\n                 formControlName=\"firstName\">\n          <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"firstName.errors.required\">\n              First name is required.\n            </small>\n            <div *ngIf=\"firstName.getError('violations')\">\n              <small class=\"form-text text-danger\" [innerHTML]=\"firstName.getError('violations')\">\n              </small>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group col-md-6\" style=\"text-align: left\">\n          <label for=\"lastName\">Last name</label>\n          <input type=\"text\" class=\"form-control registration-input\" id=\"lastName\" placeholder=\"Last name\"\n                 formControlName=\"lastName\">\n          <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"lastName.errors.required\">\n              Last name is required.\n            </small>\n            <div *ngIf=\"lastName.getError('violations')\">\n              <small class=\"form-text text-danger\" [innerHTML]=\"lastName.getError('violations')\">\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\" style=\"text-align: left\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" class=\"form-control registration-input\" id=\"username\" placeholder=\"Username\"\n               formControlName=\"username\">\n        <div *ngIf=\"username.invalid && (username.dirty || username.touched)\">\n          <small class=\"form-text text-danger\" *ngIf=\"username.errors.required\">\n            Username is required.\n          </small>\n          <div *ngIf=\"username.getError('violations')\">\n            <small class=\"form-text text-danger\" [innerHTML]=\"username.getError('violations')\">\n            </small>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\" style=\"text-align: left\">\n        <label for=\"address-email\">Email</label>\n        <input type=\"email\" class=\"form-control registration-input\" id=\"address-email\" placeholder=\"Email\"\n               formControlName=\"email\">\n        <div *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n          <small class=\"form-text text-danger\" *ngIf=\"email.errors.required\">\n            Email is required.\n          </small>\n          <div *ngIf=\"email.getError('violations')\">\n            <small class=\"form-text text-danger\" [innerHTML]=\"email.getError('violations')\">\n            </small>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\" style=\"text-align: left\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control registration-input\" id=\"password\" placeholder=\"Password\"\n                 formControlName=\"password\">\n          <div *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"password.errors.required\">\n              Password is required.\n            </small>\n            <div *ngIf=\"password.getError('violations')\">\n              <small class=\"form-text text-danger\" [innerHTML]=\"password.getError('violations')\">\n              </small>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group col-md-6\" style=\"text-align: left\">\n          <label for=\"confirm-password\">Confirm password</label>\n          <input type=\"password\" class=\"form-control registration-input\" id=\"confirm-password\"\n                 placeholder=\"Confirm password\" formControlName=\"confirmPassword\">\n          <div *ngIf=\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"confirmPassword.errors.required\">\n              Please confirm password.\n            </small>\n            <div *ngIf=\"confirmPassword.getError('violations')\">\n              <small class=\"form-text text-danger\" [innerHTML]=\"confirmPassword.getError('violations')\">\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style=\"text-align: right\">\n        <span class=\"sign-in-text\">Already have an account? <a routerLink=\"/login\">Sign in!</a></span>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary pl-5 pr-5 mt-4\" [disabled]=\"registrationForm.invalid\">\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"\n              *ngIf=\"showLoadingSpinner\"></span>\n        Register now\n      </button>\n    </form>\n  </div>\n\n</div>\n\n\n\n","export enum ChatMessagesStatus {\n  received = 'RECEIVED',\n  delivered = 'DELIVERED'\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthService\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../services/auth.service';\n\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthService) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    const currentUser = this.authenticationService.currentUserValue;\n    const token = this.authenticationService.getToken();\n    if (currentUser && token != null) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {User} from '../models/user';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {WsMessagesService} from './ws-messages.service';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient, private wsMessagesService: WsMessagesService) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  login(credentialLogin, credentialPassword): Observable<any> {\n    const helper = new JwtHelperService();\n\n    return this.http.post(environment.baseApiUrl + environment.authServiceResource + `/users/authenticate`, {\n      username: credentialLogin,\n      password: credentialPassword\n    })\n      .pipe(map(result => {\n        const accessToken = JSON.parse(JSON.stringify(result)).access_token;\n        const decodedToken = helper.decodeToken(accessToken);\n        const user = {\n          id: decodedToken.sub\n        };\n        localStorage.setItem('access_token', accessToken);\n        localStorage.setItem('user', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return result;\n      }));\n  }\n\n  register(data): Observable<any> {\n    console.log(environment.baseApiUrl + environment.authServiceResource + `/users/user`);\n    return this.http.post(environment.baseApiUrl + environment.authServiceResource + `/users/user`, data);\n    \n  }\n\n  logout() {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    this.wsMessagesService.disconnect();\n    this.currentUserSubject.next(null);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {ChatMessage} from '../models/chat-message';\n\n@Injectable({providedIn: 'root'})\nexport class ChatMessageService {\n\n  private chatMessageResource = '/chat-messages';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getLastMessages(size, friendChatId, friendChatWithId) {\n    const params = new HttpParams()\n      .set('friend_chat_id1', friendChatId)\n      .set('friend_chat_id2', friendChatWithId)\n      .set('size', size);\n    return this.http.get<ChatMessage[]>(environment.baseApiUrl + environment.chatMessagesServiceResource +\n      this.chatMessageResource + '?' + params.toString());\n  }\n\n  getPreviousMessages(size, friendChatId, friendChatWithId, from) {\n    const params = new HttpParams()\n      .set('friend_chat_id1', friendChatId)\n      .set('friend_chat_id2', friendChatWithId)\n      .set('size', size)\n      .set('from', from);\n\n    return this.http.get<ChatMessage[]>(environment.baseApiUrl + environment.chatMessagesServiceResource +\n      this.chatMessageResource + '?' + params.toString());\n  }\n\n  markMessageAsDelivered(friendChatId) {\n    const params = new HttpParams().set('friend_chat_id', friendChatId);\n    return this.http.patch(environment.baseApiUrl + environment.chatMessagesServiceResource +\n      this.chatMessageResource + '?' + params.toString(), {});\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {ChatProfile} from '../models/chat-profile';\n\n\n@Injectable({providedIn: 'root'})\nexport class ChatProfileService {\n\n  private chatProfileResource = '/chat-profiles';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getChatProfile(userId: string) {\n    return this.http.get<ChatProfile>(environment.baseApiUrl + environment.chatServiceResource + this.chatProfileResource + '/' + userId);\n  }\n\n  generateNewFriendsCode(userId: string) {\n    return this.http.patch<ChatProfile>(environment.baseApiUrl + environment.chatServiceResource +\n      this.chatProfileResource + '/' + userId + '/new-friends-request-code', {});\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {FriendChat} from '../models/friend-chat';\n\n@Injectable({providedIn: 'root'})\nexport class FriendChatService {\n\n  private friendChatResource = '/friends-chats';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  getFriendsChats() {\n    return this.http.get<FriendChat[]>(environment.baseApiUrl + environment.chatServiceResource + this.friendChatResource);\n  }\n\n  deleteFriend(chatFriendId, chatFriendWithId) {\n    const params = new HttpParams()\n      .set('friend_chat', chatFriendId)\n      .set('friend_chat_with', chatFriendWithId);\n    return this.http.delete(environment.baseApiUrl + environment.chatServiceResource + this.friendChatResource\n      + '?' + params.toString());\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {baseUrl, environment} from '../../../environments/environment';\nimport {FriendRequest} from '../models/friend-request';\n\n\n@Injectable({providedIn: 'root'})\nexport class FriendRequestService {\n\n  private friendRequestResource = '/friend-requests';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getReceivedFriendRequests() {\n    return this.http\n      .get<FriendRequest[]>(environment.baseApiUrl + environment.chatServiceResource + this.friendRequestResource + '/received');\n  }\n\n  getSentFriendRequests() {\n    return this.http\n      .get<FriendRequest[]>(environment.baseApiUrl + environment.chatServiceResource + this.friendRequestResource + '/sent');\n  }\n\n  postCreateNewFriendRequest(invitationCode) {\n    const params = new HttpParams().set('invite_code', invitationCode);\n    return this.http.post<FriendRequest>(environment.baseApiUrl + environment.chatServiceResource +\n      this.friendRequestResource + '?' + params.toString(), {});\n  }\n\n  replyToFriendsRequest(id, accept) {\n    const params = new HttpParams().set('accept', accept);\n    return this.http.patch(environment.baseApiUrl + environment.chatServiceResource +\n      this.friendRequestResource + '/' + id + '?' + params.toString(), {});\n  }\n\n\n  cancelSentFriendRequest(id) {\n    return this.http.delete(environment.baseApiUrl + environment.chatServiceResource + this.friendRequestResource +\n      '/' + id);\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {User} from '../models/user';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n\n  private userResource = '/users';\n\n  constructor(private http: HttpClient) {\n  }\n\n  activateUser(activationKey) {\n    const params = new HttpParams().set('data', activationKey);\n    return this.http.patch(environment.baseApiUrl + environment.authServiceResource +\n      this.userResource + '/activate?' + params.toString(), {});\n  }\n\n  getUser(userId: string) {\n    return this.http.get<User>(environment.baseApiUrl + environment.authServiceResource +\n      this.userResource + '/' + userId);\n  }\n\n  changePassword(userId: string, newPassword) {\n    return this.http.patch(environment.baseApiUrl + environment.authServiceResource +\n      this.userResource + '/' + userId + '/change-password', newPassword);\n  }\n\n  modifyUserInformation(id: string, user: User) {\n    return this.http.patch<User>(environment.baseApiUrl + environment.authServiceResource +\n      this.userResource + '/' + id, user);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment, wsBaseUrl} from '../../../environments/environment';\nimport * as Stomp from 'stompjs';\n\n@Injectable({providedIn: 'root'})\nexport class WsMessagesService {\n\n  private messagingWebsocketServiceResource = '/messages-websocket-service/ws';\n  ws: any;\n\n  constructor() {\n  }\n\n  connect(token, afterWebSocketConnected) {\n    this.ws = Stomp.client(environment.websocketBaseUrl + environment.websocketMessageServiceResource + '/ws');\n    this.ws.connect({\n      Authorization: 'Bearer ' + token\n      // tslint:disable-next-line:only-arrow-functions\n    }, function(frame) {\n      afterWebSocketConnected.wsAfterConnected();\n    });\n  }\n\n  sendMessage(message) {\n    return this.ws.send('/app/chat', {}, JSON.stringify(message));\n  }\n\n  disconnect() {\n    if (this.ws != null) {\n      this.ws.ws.close();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\nimport {RouterModule} from '@angular/router';\nimport {SignUpComponent} from './components/sign-up/sign-up.component';\nimport {SignInComponent} from './components/sign-in/sign-in.component';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n  declarations: [NotFoundComponent, SignUpComponent, SignInComponent],\n  exports: [\n    NotFoundComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseApiUrl: 'http://34.125.87.47:8080',\n  websocketBaseUrl: 'ws://34.125.87.47:8080',\n  authServiceResource: '/auth-service',\n  chatServiceResource: '/chat-service',\n  chatMessagesServiceResource: '/chat-messages-service',\n  websocketMessageServiceResource: '/messages-websocket-service'\n};\n\nexport const baseUrl = 'http://34.125.87.47:8080';\nexport const wsBaseUrl = 'ws://34.125.87.47:8080';\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}